generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                   String        @id @default(cuid())
  clerkId              String        @unique
  email                String        @unique
  photo                String
  firstName            String?
  lastName             String?
  usedGenerations      Int           @default(0)
  availableGenerations Int           @default(20)
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  transactions         Transaction[]
}

model Transaction {
  id                  String    @id @default(cuid())
  tracking_id         String    @unique // NetworkX transaction ID (for idempotency)
  userId              String // Clerk user ID (foreign key to User.clerkId)
  status              String?
  amount              Int? // Amount in cents/minor currency units
  currency            String? // Currency code (USD, GBP, EUR, etc.)
  description         String? // Payment description with token count
  type                String? // payment, refund, credit, etc.
  payment_method_type String? // card, bank_transfer, etc.
  message             String? // Success/error message
  paid_at             DateTime? // Payment timestamp
  receipt_url         String? // URL to PDF receipt
  createdAt           DateTime  @default(now())
  reason              String? // Failure/cancellation reason
  webhookEventId      String?   @unique // For webhook idempotency (legacy)
  user                User      @relation(fields: [userId], references: [clerkId])

  @@index([userId])
  @@index([status])
  @@index([paid_at])
}

model WebhookEvent {
  id          String    @id @default(cuid())
  eventId     String    @unique
  eventType   String
  processed   Boolean   @default(false)
  processedAt DateTime?
  createdAt   DateTime  @default(now())
}
