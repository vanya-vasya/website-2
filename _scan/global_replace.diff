diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml
index 3a2f99e..9f8ebec 100644
--- a/.github/workflows/deploy.yml
+++ b/.github/workflows/deploy.yml
@@ -1,54 +1,54 @@
-# Update to match your values: branch_name, app_name, SSH key name on GitHub from previous step if changed, server ip, username, port, and server Node pathname (using 'which pm2' on server to get path)
-
-name: Deploy Next.js App
-
-on:
-  push:
-    branches:
-      - main # Change to your specific branch
-      # - deployprod  # Additional branch for deployment
-
-jobs:
-  deploy:
-    runs-on: ubuntu-latest
-    steps:
-      - name: Checkout repository
-        uses: actions/checkout@v4
-
-      - name: Setup Node.js
-        uses: actions/setup-node@v4
-        with:
-          node-version: "20"
-
-      - name: Check Node.js version
-        run: node -v
-
-      - name: Set up SSH
-        uses: webfactory/ssh-agent@v0.5.1
-        with:
-          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
-
-      - name: Deploy to VPS
-        env:
-          HOST: 62.113.97.230
-          USERNAME: root
-          TARGET_DIR: /var/www/neuvisia
-          APP_NAME: neuvisia #should match the name of the server block
-          PORT: 3008
-
-        run: |
-          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST << EOF
-            export PATH=/root/.nvm/versions/node/v20.17.0/bin:$PATH #'which pm2' command on terminal will give the right path
-            cd $TARGET_DIR
-            git pull origin ${GITHUB_REF#refs/heads/}
-            npm install
-            npm run build
-            if pm2 list | grep -q $APP_NAME; then
-              echo "Restarting application: $APP_NAME"
-              pm2 restart $APP_NAME
-            else
-              echo "Starting application: $APP_NAME"
-              pm2 start npm --name $APP_NAME -- start -- --port=$PORT
-            fi            
-            pm2 save
-          EOF
+# Update to match your values: branch_name, app_name, SSH key name on GitHub from previous step if changed, server ip, username, port, and server Node pathname (using 'which pm2' on server to get path)
+
+name: Deploy Next.js App
+
+on:
+  push:
+    branches:
+      - main # Change to your specific branch
+      # - deployprod  # Additional branch for deployment
+
+jobs:
+  deploy:
+    runs-on: ubuntu-latest
+    steps:
+      - name: Checkout repository
+        uses: actions/checkout@v4
+
+      - name: Setup Node.js
+        uses: actions/setup-node@v4
+        with:
+          node-version: "20"
+
+      - name: Check Node.js version
+        run: node -v
+
+      - name: Set up SSH
+        uses: webfactory/ssh-agent@v0.5.1
+        with:
+          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
+
+      - name: Deploy to VPS
+        env:
+          HOST: 62.113.97.230
+          USERNAME: root
+          TARGET_DIR: /var/www/nerbixa
+          APP_NAME: nerbixa #should match the name of the server block
+          PORT: 3008
+
+        run: |
+          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST << EOF
+            export PATH=/root/.nvm/versions/node/v20.17.0/bin:$PATH #'which pm2' command on terminal will give the right path
+            cd $TARGET_DIR
+            git pull origin ${GITHUB_REF#refs/heads/}
+            npm install
+            npm run build
+            if pm2 list | grep -q $APP_NAME; then
+              echo "Restarting application: $APP_NAME"
+              pm2 restart $APP_NAME
+            else
+              echo "Starting application: $APP_NAME"
+              pm2 start npm --name $APP_NAME -- start -- --port=$PORT
+            fi            
+            pm2 save
+          EOF
diff --git a/app/layout.tsx b/app/layout.tsx
index c33bdd6..d401872 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -18,12 +18,12 @@ const spaceGrotesk = Space_Grotesk({
 });
 
 export const metadata: Metadata = {
-  title: "Zinvero",
+  title: "Nerbixa",
   description: "AI-powered creative tools for everyone",
   icons: {
-    icon: "/logos/zinvero-logo.png",
-    shortcut: "/logos/zinvero-logo.png",
-    apple: "/logos/zinvero-logo.png",
+    icon: "/logos/nerbixa-logo.png",
+    shortcut: "/logos/nerbixa-logo.png",
+    apple: "/logos/nerbixa-logo.png",
   },
 };
 
diff --git a/components/guest-mobile-sidebar.tsx b/components/guest-mobile-sidebar.tsx
index 94a4836..bfc7e77 100644
--- a/components/guest-mobile-sidebar.tsx
+++ b/components/guest-mobile-sidebar.tsx
@@ -1,88 +1,88 @@
-"use client";
-
-import { useEffect, useState } from "react";
-import { Menu } from "lucide-react";
-import Image from "next/image";
-import { Button } from "@/components/ui/button";
-import { Sheet, SheetContent, SheetTrigger } from "@/components/ui/sheet";
-import Link from "next/link";
-import { SignedIn, SignedOut } from "@clerk/nextjs";
-
-const routes = [
-  {
-    label: "Home",
-    href: "#home",
-  },
-  {
-    label: "Features",
-    href: "#features",
-  },
-  {
-    label: "FAQ",
-    href: "#faq",
-  },
-  {
-    label: "Solutions",
-    href: "#solutions",
-  },
-  {
-    label: "Testimonials",
-    href: "#testimonials",
-  },
-];
-
-export const GuestMobileSidebar = () => {
-  return (
-    <Sheet>
-    <SheetTrigger asChild>
-      <Button variant="sidebar" size="icon" className="lg:hidden text-white">
-        <Menu stroke="currentColor" />
-      </Button>
-    </SheetTrigger>
-      <SheetContent side="left" className="p-0 border-r-0">
-        <div className="space-y-4 py-6 px-6 flex flex-col h-full bg-[#0f172a] sm:ring-1 sm:ring-[#3c3c77] text-white border-none">
-          <div className="px-3 py-2 flex-1">
-            <Link href="/dashboard" className="flex items-center pl-3 mb-14">
-              <Image width={"150"} height={"60"} className="mr-4" alt="Zinvero Logo" src="/logos/zinvero-logo.png" />
-            </Link>
-            <div className="mt-6 flow-root">
-              <div className="-my-6 divide-y divide-gray-500/10">
-                <div className="space-y-2 py-6">
-                  {routes.map((route) => (
-                    <Link
-                      key={route.href}
-                      href={route.href}
-                      className="-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-[#a1aac9] hover:text-white"
-                    >
-                      <div className="flex items-center flex-1">
-                        {route.label}
-                      </div>
-                    </Link>
-                  ))}
-                </div>
-                <div className="py-6">
-                <SignedIn>
-                <Link 
-                  href="/dashboard"
-                  className="-mx-3 block rounded-lg px-3 py-2.5 text-base font-semibold leading-7 text-[#a1aac9] hover:text-white"
-                >
-                  Dashboard
-                </Link>
-                </SignedIn>
-                <SignedOut>
-                <Link 
-                  href="/dashboard"
-                  className="-mx-3 block rounded-lg px-3 py-2.5 text-base font-semibold leading-7 text-[#a1aac9] hover:text-white"
-                >
-                  Sign In / Sign Up
-                </Link>
-                </SignedOut>
-              </div>
-              </div>
-            </div>
-          </div>
-        </div>
-      </SheetContent>
-    </Sheet>
-  );
-};
+"use client";
+
+import { useEffect, useState } from "react";
+import { Menu } from "lucide-react";
+import Image from "next/image";
+import { Button } from "@/components/ui/button";
+import { Sheet, SheetContent, SheetTrigger } from "@/components/ui/sheet";
+import Link from "next/link";
+import { SignedIn, SignedOut } from "@clerk/nextjs";
+
+const routes = [
+  {
+    label: "Home",
+    href: "#home",
+  },
+  {
+    label: "Features",
+    href: "#features",
+  },
+  {
+    label: "FAQ",
+    href: "#faq",
+  },
+  {
+    label: "Solutions",
+    href: "#solutions",
+  },
+  {
+    label: "Testimonials",
+    href: "#testimonials",
+  },
+];
+
+export const GuestMobileSidebar = () => {
+  return (
+    <Sheet>
+    <SheetTrigger asChild>
+      <Button variant="sidebar" size="icon" className="lg:hidden text-white">
+        <Menu stroke="currentColor" />
+      </Button>
+    </SheetTrigger>
+      <SheetContent side="left" className="p-0 border-r-0">
+        <div className="space-y-4 py-6 px-6 flex flex-col h-full bg-[#0f172a] sm:ring-1 sm:ring-[#3c3c77] text-white border-none">
+          <div className="px-3 py-2 flex-1">
+            <Link href="/dashboard" className="flex items-center pl-3 mb-14">
+              <Image width={"150"} height={"60"} className="mr-4" alt="Nerbixa Logo" src="/logos/nerbixa-logo.png" />
+            </Link>
+            <div className="mt-6 flow-root">
+              <div className="-my-6 divide-y divide-gray-500/10">
+                <div className="space-y-2 py-6">
+                  {routes.map((route) => (
+                    <Link
+                      key={route.href}
+                      href={route.href}
+                      className="-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-[#a1aac9] hover:text-white"
+                    >
+                      <div className="flex items-center flex-1">
+                        {route.label}
+                      </div>
+                    </Link>
+                  ))}
+                </div>
+                <div className="py-6">
+                <SignedIn>
+                <Link 
+                  href="/dashboard"
+                  className="-mx-3 block rounded-lg px-3 py-2.5 text-base font-semibold leading-7 text-[#a1aac9] hover:text-white"
+                >
+                  Dashboard
+                </Link>
+                </SignedIn>
+                <SignedOut>
+                <Link 
+                  href="/dashboard"
+                  className="-mx-3 block rounded-lg px-3 py-2.5 text-base font-semibold leading-7 text-[#a1aac9] hover:text-white"
+                >
+                  Sign In / Sign Up
+                </Link>
+                </SignedOut>
+              </div>
+              </div>
+            </div>
+          </div>
+        </div>
+      </SheetContent>
+    </Sheet>
+  );
+};
diff --git a/components/guest-sidebar.tsx b/components/guest-sidebar.tsx
index a62093d..5341e48 100644
--- a/components/guest-sidebar.tsx
+++ b/components/guest-sidebar.tsx
@@ -1,104 +1,104 @@
-"use client";
-
-import Link from "next/link";
-import Image from "next/image";
-import { Montserrat } from 'next/font/google'
-import { Code, ImageIcon, LayoutDashboard, MessageSquare, Music, Settings, VideoIcon } from "lucide-react";
-import { usePathname } from "next/navigation";
-
-import { cn } from "@/lib/utils";
-import { FreeCounter } from "@/components/free-counter";
-
-const poppins = Montserrat ({ weight: '600', subsets: ['latin'] });
-
-const routes = [
-  {
-    label: 'Dashboard',
-    icon: LayoutDashboard,
-    href: '/dashboard',
-    color: "text-sky-500"
-  },
-  {
-    label: 'Conversation',
-    icon: MessageSquare,
-    href: '/dashboard/conversation',
-    color: "text-violet-500",
-  },
-  {
-    label: 'Image Generation',
-    icon: ImageIcon,
-    color: "text-pink-700",
-    href: '/dashboard/image',
-  },
-  {
-    label: 'Video Generation',
-    icon: VideoIcon,
-    color: "text-orange-700",
-    href: '/dashboard/video',
-  },
-  {
-    label: 'Music Generation',
-    icon: Music,
-    color: "text-emerald-500",
-    href: '/dashboardmusic',
-  },
-  {
-    label: 'Code Generation',
-    icon: Code,
-    color: "text-green-700",
-    href: '/dashboard/code',
-  },
-  {
-    label: 'Settings',
-    icon: Settings,
-    href: '/dashboard/settings',
-  },
-];
-
-interface SidebarProps {
-  apiUsedGenerations: number;
-  apiAvailableGenerations: number;
-};
-
-export const Sidebar = ({
-  apiUsedGenerations = 0,
-  apiAvailableGenerations = 0,
-} : SidebarProps) => {
-  const pathname = usePathname();
-
-  return (
-    <div className="space-y-4 py-4 flex flex-col h-full bg-[#111827] text-white border-none overflow-y-auto">
-    <div className="px-3 py-2 flex-1">
-      <Link href="/dashboard" className="flex items-center pl-3 mb-14">
-        <div className="relative h-8 w-8 mr-4">
-          <Image fill alt="Zinvero Logo" src="/logos/zinvero-logo.png" />
-        </div>
-        <h1 className={cn("text-2xl font-bold", poppins.className)}>
-          Thinker
-        </h1>
-      </Link>
-      <div className="space-y-1">
-        {routes.map((route) => (
-          <Link
-            key={route.href} 
-            href={route.href}
-            className={cn(
-              "text-sm group flex p-3 w-full justify-start font-medium cursor-pointer hover:text-white hover:bg-white/10 rounded-lg transition",
-              pathname === route.href ? "text-white bg-white/10" : "text-zinc-400",
-            )}
-          >
-            <div className="flex items-center flex-1">
-              <route.icon className={cn("h-5 w-5 mr-3", route.color)} />
-              {route.label}
-            </div>
-          </Link>
-        ))}
-      </div>
-    </div>
-    <FreeCounter 
-      apiUsedGenerations={apiUsedGenerations} 
-      apiAvailableGenerations={apiAvailableGenerations}
-    />
-  </div>
-  );
+"use client";
+
+import Link from "next/link";
+import Image from "next/image";
+import { Montserrat } from 'next/font/google'
+import { Code, ImageIcon, LayoutDashboard, MessageSquare, Music, Settings, VideoIcon } from "lucide-react";
+import { usePathname } from "next/navigation";
+
+import { cn } from "@/lib/utils";
+import { FreeCounter } from "@/components/free-counter";
+
+const poppins = Montserrat ({ weight: '600', subsets: ['latin'] });
+
+const routes = [
+  {
+    label: 'Dashboard',
+    icon: LayoutDashboard,
+    href: '/dashboard',
+    color: "text-sky-500"
+  },
+  {
+    label: 'Conversation',
+    icon: MessageSquare,
+    href: '/dashboard/conversation',
+    color: "text-violet-500",
+  },
+  {
+    label: 'Image Generation',
+    icon: ImageIcon,
+    color: "text-pink-700",
+    href: '/dashboard/image',
+  },
+  {
+    label: 'Video Generation',
+    icon: VideoIcon,
+    color: "text-orange-700",
+    href: '/dashboard/video',
+  },
+  {
+    label: 'Music Generation',
+    icon: Music,
+    color: "text-emerald-500",
+    href: '/dashboardmusic',
+  },
+  {
+    label: 'Code Generation',
+    icon: Code,
+    color: "text-green-700",
+    href: '/dashboard/code',
+  },
+  {
+    label: 'Settings',
+    icon: Settings,
+    href: '/dashboard/settings',
+  },
+];
+
+interface SidebarProps {
+  apiUsedGenerations: number;
+  apiAvailableGenerations: number;
+};
+
+export const Sidebar = ({
+  apiUsedGenerations = 0,
+  apiAvailableGenerations = 0,
+} : SidebarProps) => {
+  const pathname = usePathname();
+
+  return (
+    <div className="space-y-4 py-4 flex flex-col h-full bg-[#111827] text-white border-none overflow-y-auto">
+    <div className="px-3 py-2 flex-1">
+      <Link href="/dashboard" className="flex items-center pl-3 mb-14">
+        <div className="relative h-8 w-8 mr-4">
+          <Image fill alt="Nerbixa Logo" src="/logos/nerbixa-logo.png" />
+        </div>
+        <h1 className={cn("text-2xl font-bold", poppins.className)}>
+          Thinker
+        </h1>
+      </Link>
+      <div className="space-y-1">
+        {routes.map((route) => (
+          <Link
+            key={route.href} 
+            href={route.href}
+            className={cn(
+              "text-sm group flex p-3 w-full justify-start font-medium cursor-pointer hover:text-white hover:bg-white/10 rounded-lg transition",
+              pathname === route.href ? "text-white bg-white/10" : "text-zinc-400",
+            )}
+          >
+            <div className="flex items-center flex-1">
+              <route.icon className={cn("h-5 w-5 mr-3", route.color)} />
+              {route.label}
+            </div>
+          </Link>
+        ))}
+      </div>
+    </div>
+    <FreeCounter 
+      apiUsedGenerations={apiUsedGenerations} 
+      apiAvailableGenerations={apiAvailableGenerations}
+    />
+  </div>
+  );
 };
\ No newline at end of file
diff --git a/components/landing-navbar.tsx b/components/landing-navbar.tsx
index f7d761c..1cac843 100644
--- a/components/landing-navbar.tsx
+++ b/components/landing-navbar.tsx
@@ -1,35 +1,35 @@
-"use client";
-
-import { Montserrat } from "next/font/google";
-import Image from "next/image"
-import Link from "next/link"
-import { useAuth } from "@clerk/nextjs";
-
-import { cn } from "@/lib/utils";
-import { Button } from "@/components/ui/button";
-
-const font = Montserrat({ weight: '600', subsets: ['latin'] });
-
-export const LandingNavbar = () => {
-  const { isSignedIn } = useAuth();
-
-  return (
-    <nav className="p-4 bg-transparent flex items-center justify-between">
-      <Link href="/" className="flex items-center">
-        <div className="relative h-8 w-8 mr-4">
-          <Image fill alt="Zinvero Logo" src="/logos/zinvero-logo.png" />
-        </div>
-        <h1 className={cn("text-2xl font-bold text-white", font.className)}>
-          Genius
-        </h1>
-      </Link>
-      <div className="flex items-center gap-x-2">
-        <Link href={isSignedIn ? "/dashboard" : "/sign-up"}>
-          <Button variant="outline" className="rounded-full">
-            Get Started
-          </Button>
-        </Link>
-      </div>
-    </nav>
-  )
+"use client";
+
+import { Montserrat } from "next/font/google";
+import Image from "next/image"
+import Link from "next/link"
+import { useAuth } from "@clerk/nextjs";
+
+import { cn } from "@/lib/utils";
+import { Button } from "@/components/ui/button";
+
+const font = Montserrat({ weight: '600', subsets: ['latin'] });
+
+export const LandingNavbar = () => {
+  const { isSignedIn } = useAuth();
+
+  return (
+    <nav className="p-4 bg-transparent flex items-center justify-between">
+      <Link href="/" className="flex items-center">
+        <div className="relative h-8 w-8 mr-4">
+          <Image fill alt="Nerbixa Logo" src="/logos/nerbixa-logo.png" />
+        </div>
+        <h1 className={cn("text-2xl font-bold text-white", font.className)}>
+          Genius
+        </h1>
+      </Link>
+      <div className="flex items-center gap-x-2">
+        <Link href={isSignedIn ? "/dashboard" : "/sign-up"}>
+          <Button variant="outline" className="rounded-full">
+            Get Started
+          </Button>
+        </Link>
+      </div>
+    </nav>
+  )
 }
\ No newline at end of file
diff --git a/components/landing/footer.tsx b/components/landing/footer.tsx
index 8514d55..6385150 100644
--- a/components/landing/footer.tsx
+++ b/components/landing/footer.tsx
@@ -1,234 +1,234 @@
-import { Building, FileText, Mail, MapPin } from "lucide-react";
-import Image from "next/image";
-import Link from "next/link";
-
-const routes = [
-  {
-    name: "Home",
-    href: "/#home",
-  },
-  {
-    name: "Solutions",
-    href: "/#solutions",
-  },
-  {
-    name: "Products",
-    href: "/#features",
-  },
-  {
-    name: "Why Us",
-    href: "/#testimonials",
-  },
-];
-
-const importantLinks = [
-  {
-    name: "Privacy Policy",
-    href: "/privacy-policy",
-  },
-  {
-    name: "Terms and Conditions",
-    href: "/terms-and-conditions",
-  },
-  {
-    name: "Return Policy",
-    href: "/return-policy",
-  },
-  {
-    name: "Cookies Policy",
-    href: "/cookies-policy",
-  },
-];
-
-const companyDetails = [
-  {
-    name: "Company: GUΑRΑΝТЕЕD GRЕΑТ SЕRVIСЕ LТD",
-    icon: Building,
-  },
-  {
-    name: "Company Number: 15982295",
-    icon: FileText,
-  },
-  {
-    name: "support@zinvero.com",
-    icon: Mail,
-  },
-  {
-    name: `Dept 6162 43 Owston Road, Carcroft, Doncaster, United Kingdom, DN6 8DA`,
-    icon: MapPin,
-  },
-];
-
-const Footer = () => {
-  const date = new Date();
-  let year = date.getFullYear();
-
-  return (
-    <footer className="main-footer max-w-[1350px] mx-auto bg-white">
-      <div className="main-footer__top">
-        <div className="px-4">
-          <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6">
-            <div className="pr-4 pl-4">
-              <div className="footer-widget__column footer-widget__about">
-                <div className="footer-widget__logo">
-                  <Image width={"98"} height={"39"} src="/logos/zinvero-logo.png" alt="Zinvero Logo" />
-                </div>
-                <p 
-                  className="footer-widget__about-text"
-                  style={{
-                    fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
-                    fontWeight: 600,
-                    lineHeight: 1.2,
-                    letterSpacing: '0.01em',
-                    textTransform: 'none',
-                    color: '#0f172a'
-                  }}
-                >
-                  Power your vision with a next-gen AI hub that unlocks endless creativity across words, images, music, videos and beyond
-                </p>
-              </div>
-            </div>
-
-            <div className="pr-4 pl-4 pt-6 md:pt-0">
-              <div className="footer-widget__column footer-widget__company">
-                <div className="footer-widget__title-box">
-                  <h3 
-                    className="footer-widget__title"
-                    style={{
-                      fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
-                      lineHeight: 1.2,
-                      letterSpacing: '0.01em',
-                      textTransform: 'none',
-                      color: '#0f172a'
-                    }}
-                  >Menu</h3>
-                </div>
-                <div className="footer-widget__resources-list-box">
-                  <ul className="footer-widget__resources-list">
-                    {routes.map((route) => (
-                      <li key={route.name}>
-                        <Link 
-                          href={route.href}
-                          style={{
-                            fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
-                            fontWeight: 600,
-                            lineHeight: 1.2,
-                            letterSpacing: '0.01em',
-                            textTransform: 'none',
-                            color: '#0f172a'
-                          }}
-                        >{route.name}</Link>
-                      </li>
-                    ))}
-                  </ul>
-                </div>
-              </div>
-            </div>
-            <div className="pr-4 pl-4 pt-6 xl:pt-0">
-              <div className="footer-widget__column footer-widget__resources">
-                <div className="footer-widget__title-box">
-                  <h3 
-                    className="footer-widget__title"
-                    style={{
-                      fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
-                      lineHeight: 1.2,
-                      letterSpacing: '0.01em',
-                      textTransform: 'none',
-                      color: '#0f172a'
-                    }}
-                  >Links</h3>
-                </div>
-                <div className="footer-widget__resources-list-box">
-                  <ul className="footer-widget__resources-list">
-                    {importantLinks.map((link) => (
-                      <li key={link.name}>
-                        <Link 
-                          href={link.href}
-                          style={{
-                            fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
-                            fontWeight: 600,
-                            lineHeight: 1.2,
-                            letterSpacing: '0.01em',
-                            textTransform: 'none',
-                            color: '#0f172a'
-                          }}
-                        >{link.name}</Link>
-                      </li>
-                    ))}
-                  </ul>
-                </div>
-              </div>
-            </div>
-            <div className="pr-4 pl-4 pt-6 xl:pt-0">
-              <div className="footer-widget__column footer-widget__resources">
-                <div className="footer-widget__title-box">
-                  <h3 
-                    className="footer-widget__title"
-                    style={{
-                      fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
-                      lineHeight: 1.2,
-                      letterSpacing: '0.01em',
-                      textTransform: 'none',
-                      color: '#0f172a'
-                    }}
-                  >Company</h3>
-                </div>
-                <div className="footer-widget__company-list-box">
-                  <ul className="space-y-4">
-                    {companyDetails.map((detail) => (
-                      <li 
-                        key={detail.name} 
-                        className="flex text-sm"
-                        style={{
-                          fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
-                          fontWeight: 600,
-                          lineHeight: 1.2,
-                          letterSpacing: '0.01em',
-                          textTransform: 'none',
-                          color: '#0f172a'
-                        }}
-                      >
-                        <detail.icon className="h-5 w-5 mr-3 min-w-fit" />
-                        {detail.name}
-                      </li>
-                    ))}
-                  </ul>
-                </div>
-              </div>
-            </div>
-          </div>
-        </div>
-      </div>
-      <div className="main-footer__bottom">
-        <div className="flex justify-between items-center px-4 mx-4">
-          <div className="">
-            <p 
-              className="text-center"
-              style={{
-                fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
-                fontWeight: 600,
-                lineHeight: 1.2,
-                letterSpacing: '0.01em',
-                textTransform: 'none',
-                color: '#0f172a'
-              }}
-            >
-              Zinvero, Copyright © {year}. All Rights Reserved.
-            </p>
-          </div>
-        </div>
-        <div className="mt-6 flex justify-center">
-          <Image
-            src="/cards.svg"
-            alt="cards"
-            width={300}
-            height={100}
-            className=""
-          />
-        </div>
-      </div>
-    </footer>
-  );
-};
-
-export default Footer;
+import { Building, FileText, Mail, MapPin } from "lucide-react";
+import Image from "next/image";
+import Link from "next/link";
+
+const routes = [
+  {
+    name: "Home",
+    href: "/#home",
+  },
+  {
+    name: "Solutions",
+    href: "/#solutions",
+  },
+  {
+    name: "Products",
+    href: "/#features",
+  },
+  {
+    name: "Why Us",
+    href: "/#testimonials",
+  },
+];
+
+const importantLinks = [
+  {
+    name: "Privacy Policy",
+    href: "/privacy-policy",
+  },
+  {
+    name: "Terms and Conditions",
+    href: "/terms-and-conditions",
+  },
+  {
+    name: "Return Policy",
+    href: "/return-policy",
+  },
+  {
+    name: "Cookies Policy",
+    href: "/cookies-policy",
+  },
+];
+
+const companyDetails = [
+  {
+    name: "Company: GUΑRΑΝТЕЕD GRЕΑТ SЕRVIСЕ LТD",
+    icon: Building,
+  },
+  {
+    name: "Company Number: 15982295",
+    icon: FileText,
+  },
+  {
+    name: "support@nerbixa.com",
+    icon: Mail,
+  },
+  {
+    name: `Dept 6162 43 Owston Road, Carcroft, Doncaster, United Kingdom, DN6 8DA`,
+    icon: MapPin,
+  },
+];
+
+const Footer = () => {
+  const date = new Date();
+  let year = date.getFullYear();
+
+  return (
+    <footer className="main-footer max-w-[1350px] mx-auto bg-white">
+      <div className="main-footer__top">
+        <div className="px-4">
+          <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6">
+            <div className="pr-4 pl-4">
+              <div className="footer-widget__column footer-widget__about">
+                <div className="footer-widget__logo">
+                  <Image width={"98"} height={"39"} src="/logos/nerbixa-logo.png" alt="Nerbixa Logo" />
+                </div>
+                <p 
+                  className="footer-widget__about-text"
+                  style={{
+                    fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
+                    fontWeight: 600,
+                    lineHeight: 1.2,
+                    letterSpacing: '0.01em',
+                    textTransform: 'none',
+                    color: '#0f172a'
+                  }}
+                >
+                  Power your vision with a next-gen AI hub that unlocks endless creativity across words, images, music, videos and beyond
+                </p>
+              </div>
+            </div>
+
+            <div className="pr-4 pl-4 pt-6 md:pt-0">
+              <div className="footer-widget__column footer-widget__company">
+                <div className="footer-widget__title-box">
+                  <h3 
+                    className="footer-widget__title"
+                    style={{
+                      fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
+                      lineHeight: 1.2,
+                      letterSpacing: '0.01em',
+                      textTransform: 'none',
+                      color: '#0f172a'
+                    }}
+                  >Menu</h3>
+                </div>
+                <div className="footer-widget__resources-list-box">
+                  <ul className="footer-widget__resources-list">
+                    {routes.map((route) => (
+                      <li key={route.name}>
+                        <Link 
+                          href={route.href}
+                          style={{
+                            fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
+                            fontWeight: 600,
+                            lineHeight: 1.2,
+                            letterSpacing: '0.01em',
+                            textTransform: 'none',
+                            color: '#0f172a'
+                          }}
+                        >{route.name}</Link>
+                      </li>
+                    ))}
+                  </ul>
+                </div>
+              </div>
+            </div>
+            <div className="pr-4 pl-4 pt-6 xl:pt-0">
+              <div className="footer-widget__column footer-widget__resources">
+                <div className="footer-widget__title-box">
+                  <h3 
+                    className="footer-widget__title"
+                    style={{
+                      fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
+                      lineHeight: 1.2,
+                      letterSpacing: '0.01em',
+                      textTransform: 'none',
+                      color: '#0f172a'
+                    }}
+                  >Links</h3>
+                </div>
+                <div className="footer-widget__resources-list-box">
+                  <ul className="footer-widget__resources-list">
+                    {importantLinks.map((link) => (
+                      <li key={link.name}>
+                        <Link 
+                          href={link.href}
+                          style={{
+                            fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
+                            fontWeight: 600,
+                            lineHeight: 1.2,
+                            letterSpacing: '0.01em',
+                            textTransform: 'none',
+                            color: '#0f172a'
+                          }}
+                        >{link.name}</Link>
+                      </li>
+                    ))}
+                  </ul>
+                </div>
+              </div>
+            </div>
+            <div className="pr-4 pl-4 pt-6 xl:pt-0">
+              <div className="footer-widget__column footer-widget__resources">
+                <div className="footer-widget__title-box">
+                  <h3 
+                    className="footer-widget__title"
+                    style={{
+                      fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
+                      lineHeight: 1.2,
+                      letterSpacing: '0.01em',
+                      textTransform: 'none',
+                      color: '#0f172a'
+                    }}
+                  >Company</h3>
+                </div>
+                <div className="footer-widget__company-list-box">
+                  <ul className="space-y-4">
+                    {companyDetails.map((detail) => (
+                      <li 
+                        key={detail.name} 
+                        className="flex text-sm"
+                        style={{
+                          fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
+                          fontWeight: 600,
+                          lineHeight: 1.2,
+                          letterSpacing: '0.01em',
+                          textTransform: 'none',
+                          color: '#0f172a'
+                        }}
+                      >
+                        <detail.icon className="h-5 w-5 mr-3 min-w-fit" />
+                        {detail.name}
+                      </li>
+                    ))}
+                  </ul>
+                </div>
+              </div>
+            </div>
+          </div>
+        </div>
+      </div>
+      <div className="main-footer__bottom">
+        <div className="flex justify-between items-center px-4 mx-4">
+          <div className="">
+            <p 
+              className="text-center"
+              style={{
+                fontFamily: 'Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
+                fontWeight: 600,
+                lineHeight: 1.2,
+                letterSpacing: '0.01em',
+                textTransform: 'none',
+                color: '#0f172a'
+              }}
+            >
+              Nerbixa, Copyright © {year}. All Rights Reserved.
+            </p>
+          </div>
+        </div>
+        <div className="mt-6 flex justify-center">
+          <Image
+            src="/cards.svg"
+            alt="cards"
+            width={300}
+            height={100}
+            className=""
+          />
+        </div>
+      </div>
+    </footer>
+  );
+};
+
+export default Footer;
diff --git a/components/landing/header.tsx b/components/landing/header.tsx
index 9c78a29..f6bc6f9 100644
--- a/components/landing/header.tsx
+++ b/components/landing/header.tsx
@@ -1,134 +1,134 @@
-"use client";
-import Link from "next/link";
-import { SignedIn, SignedOut } from "@clerk/nextjs";
-import { GuestMobileSidebar } from "@/components/guest-mobile-sidebar";
-import Image from "next/image";
-import { motion } from "framer-motion";
-
-const routes = [
-  {
-    name: "Solutions",
-    href: "/#solutions",
-  },
-  {
-    name: "Products",
-    href: "/#features",
-  },
-  {
-    name: "Why Us",
-    href: "/#testimonials",
-  },
-];
-
-const Header = () => {
-  return (
-    <header className="bg-white">
-      <nav className="mx-auto flex max-w-7xl items-center justify-between p-3 lg:px-6 gap-1">
-        <div className="flex">
-          <Link href="/" className="-m-1.5 p-1.5">
-            <Image width={"98"} height={"39"} src="/logos/zinvero-logo.png" alt="Zinvero Logo"/>
-          </Link>
-        </div>
-        <div className="flex gap-x-12 ml-12">
-          <div className="nav-container">
-            {routes.map((route) => (
-              <Link
-                key={route.name}
-                href={route.href}
-                className="nav-link"
-              >
-                {route.name}
-              </Link>
-            ))}
-          </div>
-        </div>
-        <div className="flex lg:flex-1 lg:justify-end">
-          <div className="flex ">
-            <ul className="main-header__login-sing-up">
-              <li>
-                <SignedIn>
-                  <motion.div
-                    whileHover={{ scale: 1.05 }}
-                    whileTap={{ scale: 0.98 }}
-                  >
-                    <Link
-                      href="/dashboard"
-                      className="nav-link"
-                    >
-                      Dashboard
-                    </Link>
-                  </motion.div>
-                </SignedIn>
-                <SignedOut>
-                  <motion.div
-                    whileHover={{ scale: 1.05 }}
-                    whileTap={{ scale: 0.98 }}
-                  >
-                    <Link
-                      href="/dashboard"
-                      className="nav-link"
-                    >
-                      Sign In / Sign Up
-                    </Link>
-                  </motion.div>
-                </SignedOut>
-              </li>
-            </ul>
-          </div>
-          <GuestMobileSidebar />
-        </div>
-      </nav>
-
-      <style jsx global>{`
-        :root {
-          --nav-font: Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
-          --contact-font: Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
-        }
-
-        .nav-container {
-          display: flex;
-          background-color: #f8fafc;
-          border-radius: 9999px;
-          padding: 4px;
-          gap: 4px;
-        }
-
-        .nav-link {
-          font-family: var(--contact-font);
-          font-weight: 600;
-          font-size: 16px;
-          line-height: 1.1;
-          letter-spacing: 0.01em;
-          text-transform: none;
-          color: #0f172a;
-          padding: 8px 16px;
-          border-radius: 9999px;
-          transition: all 500ms ease-in-out;
-        }
-
-        .main-header__login-sing-up .nav-link {
-          font-family: var(--contact-font) !important;
-          font-weight: 600 !important;
-          font-size: 16px !important;
-          line-height: 1.1 !important;
-          letter-spacing: 0.01em !important;
-          text-transform: none !important;
-          color: #0f172a !important;
-          padding: 8px 16px !important;
-          border-radius: 9999px !important;
-          border: none !important;
-        }
-
-        .nav-link:hover {
-          background: linear-gradient(to right, #22d3ee, #3b82f6, #4f46e5);
-          background-clip: text;
-          -webkit-background-clip: text;
-          color: transparent;
-          text-decoration: none;
-        }
-      `}</style>
-    </header>
-  );
-};
-
-export default Header;
+"use client";
+import Link from "next/link";
+import { SignedIn, SignedOut } from "@clerk/nextjs";
+import { GuestMobileSidebar } from "@/components/guest-mobile-sidebar";
+import Image from "next/image";
+import { motion } from "framer-motion";
+
+const routes = [
+  {
+    name: "Solutions",
+    href: "/#solutions",
+  },
+  {
+    name: "Products",
+    href: "/#features",
+  },
+  {
+    name: "Why Us",
+    href: "/#testimonials",
+  },
+];
+
+const Header = () => {
+  return (
+    <header className="bg-white">
+      <nav className="mx-auto flex max-w-7xl items-center justify-between p-3 lg:px-6 gap-1">
+        <div className="flex">
+          <Link href="/" className="-m-1.5 p-1.5">
+            <Image width={"98"} height={"39"} src="/logos/nerbixa-logo.png" alt="Nerbixa Logo"/>
+          </Link>
+        </div>
+        <div className="flex gap-x-12 ml-12">
+          <div className="nav-container">
+            {routes.map((route) => (
+              <Link
+                key={route.name}
+                href={route.href}
+                className="nav-link"
+              >
+                {route.name}
+              </Link>
+            ))}
+          </div>
+        </div>
+        <div className="flex lg:flex-1 lg:justify-end">
+          <div className="flex ">
+            <ul className="main-header__login-sing-up">
+              <li>
+                <SignedIn>
+                  <motion.div
+                    whileHover={{ scale: 1.05 }}
+                    whileTap={{ scale: 0.98 }}
+                  >
+                    <Link
+                      href="/dashboard"
+                      className="nav-link"
+                    >
+                      Dashboard
+                    </Link>
+                  </motion.div>
+                </SignedIn>
+                <SignedOut>
+                  <motion.div
+                    whileHover={{ scale: 1.05 }}
+                    whileTap={{ scale: 0.98 }}
+                  >
+                    <Link
+                      href="/dashboard"
+                      className="nav-link"
+                    >
+                      Sign In / Sign Up
+                    </Link>
+                  </motion.div>
+                </SignedOut>
+              </li>
+            </ul>
+          </div>
+          <GuestMobileSidebar />
+        </div>
+      </nav>
+
+      <style jsx global>{`
+        :root {
+          --nav-font: Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
+          --contact-font: Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
+        }
+
+        .nav-container {
+          display: flex;
+          background-color: #f8fafc;
+          border-radius: 9999px;
+          padding: 4px;
+          gap: 4px;
+        }
+
+        .nav-link {
+          font-family: var(--contact-font);
+          font-weight: 600;
+          font-size: 16px;
+          line-height: 1.1;
+          letter-spacing: 0.01em;
+          text-transform: none;
+          color: #0f172a;
+          padding: 8px 16px;
+          border-radius: 9999px;
+          transition: all 500ms ease-in-out;
+        }
+
+        .main-header__login-sing-up .nav-link {
+          font-family: var(--contact-font) !important;
+          font-weight: 600 !important;
+          font-size: 16px !important;
+          line-height: 1.1 !important;
+          letter-spacing: 0.01em !important;
+          text-transform: none !important;
+          color: #0f172a !important;
+          padding: 8px 16px !important;
+          border-radius: 9999px !important;
+          border: none !important;
+        }
+
+        .nav-link:hover {
+          background: linear-gradient(to right, #22d3ee, #3b82f6, #4f46e5);
+          background-clip: text;
+          -webkit-background-clip: text;
+          color: transparent;
+          text-decoration: none;
+        }
+      `}</style>
+    </header>
+  );
+};
+
+export default Header;
diff --git a/components/loader.tsx b/components/loader.tsx
index 32f9310..44c9710 100644
--- a/components/loader.tsx
+++ b/components/loader.tsx
@@ -1,18 +1,18 @@
-import Image from "next/image"
-
-export const Loader = () => {
-  return (
-    <div className="h-full flex flex-col gap-y-4 items-center justify-center bg-slate-900">
-      <div className="w-10 h-10 relative animate-spin">
-        <Image
-          alt="Logo"
-          src="/logo-icon.png"
-          fill
-        />
-      </div>
-      <p className="text-sm text-muted-foreground">
-        Zinvero is thinking...
-      </p>
-    </div>
-  );
+import Image from "next/image"
+
+export const Loader = () => {
+  return (
+    <div className="h-full flex flex-col gap-y-4 items-center justify-center bg-slate-900">
+      <div className="w-10 h-10 relative animate-spin">
+        <Image
+          alt="Logo"
+          src="/logo-icon.png"
+          fill
+        />
+      </div>
+      <p className="text-sm text-muted-foreground">
+        Nerbixa is thinking...
+      </p>
+    </div>
+  );
 };
\ No newline at end of file
diff --git a/components/main-nav.tsx b/components/main-nav.tsx
index f96f4c7..18bfb27 100644
--- a/components/main-nav.tsx
+++ b/components/main-nav.tsx
@@ -1,278 +1,278 @@
-"use client";
-
-import * as React from "react";
-import Link from "next/link";
-import { motion } from "framer-motion";
-import { cn } from "@/lib/utils";
-import {
-  NavigationMenu,
-  NavigationMenuContent,
-  NavigationMenuItem,
-  NavigationMenuLink,
-  NavigationMenuList,
-  NavigationMenuTrigger,
-} from "@/components/ui/navigation-menu";
-import {
-  MessageSquare,
-  Music,
-  FileAudio,
-  Video,
-  FileImage,
-  Wand2,
-  ImageMinus,
-  Scissors,
-  PaintBucket,
-  ArchiveRestore,
-  Layers,
-  Sparkles,
-  ChevronDown,
-  Palette,
-  Mic,
-  Coins,
-  Banknote,
-  Lightbulb,
-} from "lucide-react";
-import Image from "next/image";
-import { UsageProgress } from "./usage-progress";
-import { tools } from "@/constants";
-
-// Инструменты для видео-креаторов
-const videoCreatorTools = tools.filter((tool) =>
-  tool.professions.includes("video")
-);
-
-// Инструменты для цифровых художников
-const digitalArtistTools = tools.filter((tool) =>
-  tool.professions.includes("art")
-);
-
-// Инструменты для музыкантов
-const musicianTools = tools.filter((tool) =>
-  tool.professions.includes("music")
-);
-
-// Инструменты для контент-креаторов
-const contentCreatorTools = tools.filter((tool) =>
-  tool.professions.includes("content")
-);
-
-// Общие инструменты
-const commonTools = tools.filter((tool) => tool.professions.includes("all"));
-
-export function MainNav({
-  initialUsedGenerations,
-  initialAvailableGenerations,
-}: {
-  initialUsedGenerations: number;
-  initialAvailableGenerations: number;
-}) {
-  return (
-    <div className="flex items-center justify-between w-full bg-white">
-      <div className="flex items-center gap-8">
-        <Link
-          href="/dashboard"
-          className="hidden items-center space-x-2 md:flex"
-        >
-          <Image src="/logos/zinvero-logo.png" alt="Zinvero Logo" width={150} height={50} />
-        </Link>
-
-        <NavigationMenu>
-          <NavigationMenuList className="nav-container">
-            <NavigationMenuItem>
-              <NavigationMenuTrigger className="nav-link bg-transparent hover:bg-transparent focus:bg-transparent data-[state=open]:bg-transparent">
-                <Video className="mr-2 h-4 w-4 text-blue-600" />
-                Co-Director
-              </NavigationMenuTrigger>
-              <NavigationMenuContent className="bg-white backdrop-blur-xl border border-violet-300 rounded-xl overflow-hidden shadow-lg">
-                <ul className="grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px]">
-                  {videoCreatorTools.map((item) => (
-                    <ListItem
-                      key={item.id}
-                      id={item.id}
-                      title={item.label}
-                      href={item.href}
-                      icon={item.icon}
-                    >
-                      {item.description}
-                    </ListItem>
-                  ))}
-                </ul>
-              </NavigationMenuContent>
-            </NavigationMenuItem>
-
-            <NavigationMenuItem>
-              <NavigationMenuTrigger className="nav-link bg-transparent hover:bg-transparent focus:bg-transparent data-[state=open]:bg-transparent">
-                <Palette className="mr-2 h-4 w-4 text-blue-600" />
-                Design Partner
-              </NavigationMenuTrigger>
-              <NavigationMenuContent className="bg-white backdrop-blur-xl border border-pink-300 rounded-xl overflow-hidden shadow-lg">
-                <ul className="grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px]">
-                  {digitalArtistTools.map((item) => (
-                    <ListItem
-                      key={item.id}
-                      id={item.id}
-                      title={item.label}
-                      href={item.href}
-                      icon={item.icon}
-                    >
-                      {item.description}
-                    </ListItem>
-                  ))}
-                </ul>
-              </NavigationMenuContent>
-            </NavigationMenuItem>
-
-            <NavigationMenuItem>
-              <NavigationMenuTrigger className="nav-link bg-transparent hover:bg-transparent focus:bg-transparent data-[state=open]:bg-transparent">
-                <Music className="mr-2 h-4 w-4 text-blue-600" />
-                Co-Composer
-              </NavigationMenuTrigger>
-              <NavigationMenuContent className="bg-white backdrop-blur-xl border border-blue-300 rounded-xl overflow-hidden shadow-lg">
-                <ul className="grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px]">
-                  {musicianTools.map((item) => (
-                    <ListItem
-                      key={item.id}
-                      id={item.id}
-                      title={item.label}
-                      href={item.href}
-                      icon={item.icon}
-                    >
-                      {item.description}
-                    </ListItem>
-                  ))}
-                </ul>
-              </NavigationMenuContent>
-            </NavigationMenuItem>
-
-            <NavigationMenuItem>
-              <NavigationMenuTrigger className="nav-link bg-transparent hover:bg-transparent focus:bg-transparent data-[state=open]:bg-transparent">
-                <Lightbulb className="mr-2 h-4 w-4 text-blue-600" />
-                Creative Partner
-              </NavigationMenuTrigger>
-              <NavigationMenuContent className="bg-white backdrop-blur-xl border border-emerald-300 rounded-xl overflow-hidden shadow-lg">
-                <ul className="grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px]">
-                  {contentCreatorTools.map((item) => (
-                    <ListItem
-                      key={item.id}
-                      id={item.id}
-                      title={item.label}
-                      href={item.href}
-                      icon={item.icon}
-                    >
-                      {item.description}
-                    </ListItem>
-                  ))}
-                </ul>
-              </NavigationMenuContent>
-            </NavigationMenuItem>
-
-            <NavigationMenuItem>
-              <Link href={"/dashboard/billing/payment-history"}>
-                <div className="nav-link cursor-pointer group inline-flex h-10 w-max items-center justify-center rounded-md px-4 py-2 text-sm font-medium transition-colors focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 group bg-transparent">
-                  <Banknote className="mr-2 h-4 w-4 text-blue-600" />
-                  Payments
-                </div>
-              </Link>
-            </NavigationMenuItem>
-          </NavigationMenuList>
-        </NavigationMenu>
-      </div>
-      
-      <style jsx global>{`
-        .nav-container {
-          display: flex;
-          background-color: #f8fafc;
-          border-radius: 9999px;
-          padding: 4px;
-          gap: 4px;
-        }
-
-        .nav-link {
-          font-family: var(--font-sans);
-          font-weight: 600;
-          font-size: 16px;
-          line-height: 1.1;
-          letter-spacing: 0.01em;
-          text-transform: none;
-          color: #0f172a;
-          padding: 8px 16px;
-          border-radius: 9999px;
-          transition: all 500ms ease-in-out;
-        }
-
-        .nav-link:hover {
-          background: linear-gradient(to right, #22d3ee, #3b82f6, #4f46e5);
-          background-clip: text;
-          -webkit-background-clip: text;
-          color: transparent;
-          text-decoration: none;
-        }
-      `}</style>
-    </div>
-  );
-}
-
-const ListItem = React.forwardRef<
-  React.ElementRef<"a">,
-  React.ComponentPropsWithoutRef<"a"> & {
-    icon: any;
-    id?: string;
-  }
->(
-  (
-    {
-      className,
-      title,
-      children,
-      icon: Icon,
-      id,
-      href,
-      ...props
-    },
-    ref
-  ) => {
-    // Use the ID directly as the toolId when available
-    const toolId = id;
-
-    // Construct the complete href with toolId parameter
-    let fullHref = href || "";
-
-    // Only add the toolId if it exists and the URL doesn't already have a toolId parameter
-    if (toolId && href && !href.includes("?toolId=")) {
-      // If the URL already has parameters, add toolId with &, otherwise with ?
-      fullHref = href.includes("?")
-        ? `${href}&toolId=${toolId}`
-        : `${href}?toolId=${toolId}`;
-    }
-
-    return (
-      <li>
-        <NavigationMenuLink asChild>
-          <Link
-            ref={ref}
-            href={fullHref}
-            className={cn(
-              "block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors text-black hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900",
-              className
-            )}
-            {...props}
-          >
-            <div className="flex items-center gap-4 mb-2">
-              <div className="relative w-8 h-8 flex items-center justify-center">
-                <div className="absolute inset-0 rounded-full bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 opacity-20 blur-sm"></div>
-                <div className="relative bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 p-2 rounded-full backdrop-blur-sm">
-                  <Icon className="w-4 h-4 text-white" />
-                </div>
-              </div>
-              <div className="text-sm font-medium leading-none">{title}</div>
-            </div>
-            <p className="line-clamp-2 text-sm leading-snug text-gray-600">
-              {children}
-            </p>
-          </Link>
-        </NavigationMenuLink>
-      </li>
-    );
-  }
-);
-ListItem.displayName = "ListItem";
+"use client";
+
+import * as React from "react";
+import Link from "next/link";
+import { motion } from "framer-motion";
+import { cn } from "@/lib/utils";
+import {
+  NavigationMenu,
+  NavigationMenuContent,
+  NavigationMenuItem,
+  NavigationMenuLink,
+  NavigationMenuList,
+  NavigationMenuTrigger,
+} from "@/components/ui/navigation-menu";
+import {
+  MessageSquare,
+  Music,
+  FileAudio,
+  Video,
+  FileImage,
+  Wand2,
+  ImageMinus,
+  Scissors,
+  PaintBucket,
+  ArchiveRestore,
+  Layers,
+  Sparkles,
+  ChevronDown,
+  Palette,
+  Mic,
+  Coins,
+  Banknote,
+  Lightbulb,
+} from "lucide-react";
+import Image from "next/image";
+import { UsageProgress } from "./usage-progress";
+import { tools } from "@/constants";
+
+// Инструменты для видео-креаторов
+const videoCreatorTools = tools.filter((tool) =>
+  tool.professions.includes("video")
+);
+
+// Инструменты для цифровых художников
+const digitalArtistTools = tools.filter((tool) =>
+  tool.professions.includes("art")
+);
+
+// Инструменты для музыкантов
+const musicianTools = tools.filter((tool) =>
+  tool.professions.includes("music")
+);
+
+// Инструменты для контент-креаторов
+const contentCreatorTools = tools.filter((tool) =>
+  tool.professions.includes("content")
+);
+
+// Общие инструменты
+const commonTools = tools.filter((tool) => tool.professions.includes("all"));
+
+export function MainNav({
+  initialUsedGenerations,
+  initialAvailableGenerations,
+}: {
+  initialUsedGenerations: number;
+  initialAvailableGenerations: number;
+}) {
+  return (
+    <div className="flex items-center justify-between w-full bg-white">
+      <div className="flex items-center gap-8">
+        <Link
+          href="/dashboard"
+          className="hidden items-center space-x-2 md:flex"
+        >
+          <Image src="/logos/nerbixa-logo.png" alt="Nerbixa Logo" width={150} height={50} />
+        </Link>
+
+        <NavigationMenu>
+          <NavigationMenuList className="nav-container">
+            <NavigationMenuItem>
+              <NavigationMenuTrigger className="nav-link bg-transparent hover:bg-transparent focus:bg-transparent data-[state=open]:bg-transparent">
+                <Video className="mr-2 h-4 w-4 text-blue-600" />
+                Co-Director
+              </NavigationMenuTrigger>
+              <NavigationMenuContent className="bg-white backdrop-blur-xl border border-violet-300 rounded-xl overflow-hidden shadow-lg">
+                <ul className="grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px]">
+                  {videoCreatorTools.map((item) => (
+                    <ListItem
+                      key={item.id}
+                      id={item.id}
+                      title={item.label}
+                      href={item.href}
+                      icon={item.icon}
+                    >
+                      {item.description}
+                    </ListItem>
+                  ))}
+                </ul>
+              </NavigationMenuContent>
+            </NavigationMenuItem>
+
+            <NavigationMenuItem>
+              <NavigationMenuTrigger className="nav-link bg-transparent hover:bg-transparent focus:bg-transparent data-[state=open]:bg-transparent">
+                <Palette className="mr-2 h-4 w-4 text-blue-600" />
+                Design Partner
+              </NavigationMenuTrigger>
+              <NavigationMenuContent className="bg-white backdrop-blur-xl border border-pink-300 rounded-xl overflow-hidden shadow-lg">
+                <ul className="grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px]">
+                  {digitalArtistTools.map((item) => (
+                    <ListItem
+                      key={item.id}
+                      id={item.id}
+                      title={item.label}
+                      href={item.href}
+                      icon={item.icon}
+                    >
+                      {item.description}
+                    </ListItem>
+                  ))}
+                </ul>
+              </NavigationMenuContent>
+            </NavigationMenuItem>
+
+            <NavigationMenuItem>
+              <NavigationMenuTrigger className="nav-link bg-transparent hover:bg-transparent focus:bg-transparent data-[state=open]:bg-transparent">
+                <Music className="mr-2 h-4 w-4 text-blue-600" />
+                Co-Composer
+              </NavigationMenuTrigger>
+              <NavigationMenuContent className="bg-white backdrop-blur-xl border border-blue-300 rounded-xl overflow-hidden shadow-lg">
+                <ul className="grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px]">
+                  {musicianTools.map((item) => (
+                    <ListItem
+                      key={item.id}
+                      id={item.id}
+                      title={item.label}
+                      href={item.href}
+                      icon={item.icon}
+                    >
+                      {item.description}
+                    </ListItem>
+                  ))}
+                </ul>
+              </NavigationMenuContent>
+            </NavigationMenuItem>
+
+            <NavigationMenuItem>
+              <NavigationMenuTrigger className="nav-link bg-transparent hover:bg-transparent focus:bg-transparent data-[state=open]:bg-transparent">
+                <Lightbulb className="mr-2 h-4 w-4 text-blue-600" />
+                Creative Partner
+              </NavigationMenuTrigger>
+              <NavigationMenuContent className="bg-white backdrop-blur-xl border border-emerald-300 rounded-xl overflow-hidden shadow-lg">
+                <ul className="grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px]">
+                  {contentCreatorTools.map((item) => (
+                    <ListItem
+                      key={item.id}
+                      id={item.id}
+                      title={item.label}
+                      href={item.href}
+                      icon={item.icon}
+                    >
+                      {item.description}
+                    </ListItem>
+                  ))}
+                </ul>
+              </NavigationMenuContent>
+            </NavigationMenuItem>
+
+            <NavigationMenuItem>
+              <Link href={"/dashboard/billing/payment-history"}>
+                <div className="nav-link cursor-pointer group inline-flex h-10 w-max items-center justify-center rounded-md px-4 py-2 text-sm font-medium transition-colors focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 group bg-transparent">
+                  <Banknote className="mr-2 h-4 w-4 text-blue-600" />
+                  Payments
+                </div>
+              </Link>
+            </NavigationMenuItem>
+          </NavigationMenuList>
+        </NavigationMenu>
+      </div>
+      
+      <style jsx global>{`
+        .nav-container {
+          display: flex;
+          background-color: #f8fafc;
+          border-radius: 9999px;
+          padding: 4px;
+          gap: 4px;
+        }
+
+        .nav-link {
+          font-family: var(--font-sans);
+          font-weight: 600;
+          font-size: 16px;
+          line-height: 1.1;
+          letter-spacing: 0.01em;
+          text-transform: none;
+          color: #0f172a;
+          padding: 8px 16px;
+          border-radius: 9999px;
+          transition: all 500ms ease-in-out;
+        }
+
+        .nav-link:hover {
+          background: linear-gradient(to right, #22d3ee, #3b82f6, #4f46e5);
+          background-clip: text;
+          -webkit-background-clip: text;
+          color: transparent;
+          text-decoration: none;
+        }
+      `}</style>
+    </div>
+  );
+}
+
+const ListItem = React.forwardRef<
+  React.ElementRef<"a">,
+  React.ComponentPropsWithoutRef<"a"> & {
+    icon: any;
+    id?: string;
+  }
+>(
+  (
+    {
+      className,
+      title,
+      children,
+      icon: Icon,
+      id,
+      href,
+      ...props
+    },
+    ref
+  ) => {
+    // Use the ID directly as the toolId when available
+    const toolId = id;
+
+    // Construct the complete href with toolId parameter
+    let fullHref = href || "";
+
+    // Only add the toolId if it exists and the URL doesn't already have a toolId parameter
+    if (toolId && href && !href.includes("?toolId=")) {
+      // If the URL already has parameters, add toolId with &, otherwise with ?
+      fullHref = href.includes("?")
+        ? `${href}&toolId=${toolId}`
+        : `${href}?toolId=${toolId}`;
+    }
+
+    return (
+      <li>
+        <NavigationMenuLink asChild>
+          <Link
+            ref={ref}
+            href={fullHref}
+            className={cn(
+              "block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors text-black hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900",
+              className
+            )}
+            {...props}
+          >
+            <div className="flex items-center gap-4 mb-2">
+              <div className="relative w-8 h-8 flex items-center justify-center">
+                <div className="absolute inset-0 rounded-full bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 opacity-20 blur-sm"></div>
+                <div className="relative bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 p-2 rounded-full backdrop-blur-sm">
+                  <Icon className="w-4 h-4 text-white" />
+                </div>
+              </div>
+              <div className="text-sm font-medium leading-none">{title}</div>
+            </div>
+            <p className="line-clamp-2 text-sm leading-snug text-gray-600">
+              {children}
+            </p>
+          </Link>
+        </NavigationMenuLink>
+      </li>
+    );
+  }
+);
+ListItem.displayName = "ListItem";
diff --git a/components/mobile-nav.tsx b/components/mobile-nav.tsx
index 5ce843c..fc6c829 100644
--- a/components/mobile-nav.tsx
+++ b/components/mobile-nav.tsx
@@ -100,8 +100,8 @@ export function MobileNav({
           <SheetHeader className="p-5 border-b border-gray-200">
             <div className="flex justify-between items-center">
               <Image
-                src="/logos/zinvero-logo.png"
-                alt="Zinvero Logo"
+                src="/logos/nerbixa-logo.png"
+                alt="Nerbixa Logo"
                 width={150}
                 height={50}
               />
diff --git a/components/pdf/receipt.tsx b/components/pdf/receipt.tsx
index 877debc..9ff08b1 100644
--- a/components/pdf/receipt.tsx
+++ b/components/pdf/receipt.tsx
@@ -1,253 +1,253 @@
-import React from "react";
-import {
-  Document,
-  Page,
-  Text,
-  View,
-  StyleSheet,
-  Image,
-  Link,
-  Font,
-} from "@react-pdf/renderer";
-
-const colors = {
-  background: "#0f172a",
-  textColor1: "#ffffff",
-  textColor2: "#a1aac0",
-  textColor3: "#525f7f",
-  textColor4: "#687385",
-};
-
-Font.register({
-  family: "Nunito",
-  src: `./public/assets/fonts/Nunito-Regular.ttf`,
-});
-
-const styles = StyleSheet.create({
-  page: {
-    display: "flex",
-    justifyContent: "space-between",
-    backgroundColor: colors.background,
-    padding: 40,
-    fontSize: 12,
-    fontFamily: "Nunito",
-  },
-  header: {
-    display: "flex",
-    alignItems: "center",
-    justifyContent: "center",
-    borderRadius: 5,
-    padding: 0,
-    height: 100,
-  },
-  headerImage: {
-    width: 300,
-  },
-  titleSection: {
-    marginTop: 48,
-    textAlign: "center",
-  },
-  title: {
-    fontSize: 24,
-    color: colors.textColor1,
-    fontWeight: 700,
-    marginBottom: 4,
-  },
-  subtitle: {
-    paddingTop: 4,
-    fontSize: 15,
-    color: colors.textColor2,
-  },
-  infoRow: {
-    flexDirection: "row",
-    justifyContent: "space-between",
-    marginTop: 32,
-  },
-  infoBlock: {
-    width: "30%",
-  },
-  label: {
-    color: colors.textColor1,
-    fontWeight: 700,
-    fontSize: 10,
-    textTransform: "uppercase",
-    marginBottom: 2,
-  },
-  value: {
-    paddingTop: 6,
-    color: colors.textColor2,
-    fontSize: 15,
-    lineHeight: 1.4,
-  },
-  summaryTitle: {
-    marginTop: 32,
-    fontWeight: 700,
-    fontSize: 10,
-    color: colors.textColor1,
-    textTransform: "uppercase",
-    marginBottom: 12,
-  },
-  block: {
-    // backgroundColor: colors.background2,
-    // borderWidth: 1,
-    // borderColor: colors.textColor2,
-    // borderRadius: 8,
-    // padding: 12,
-  },
-  itemRow: {
-    flexDirection: "row",
-    justifyContent: "space-between",
-    // borderBottom: "1px solid #e6ebf1",
-    paddingVertical: 8,
-  },
-  itemRowFirst: {
-    flexDirection: "row",
-    justifyContent: "space-between",
-    borderBottom: "1px solid #e6ebf1",
-    paddingVertical: 8,
-  },
-
-  itemText: {
-    color: colors.textColor2,
-    fontSize: 15,
-  },
-  footer: {
-    marginTop: 40,
-    color: colors.textColor2,
-    fontSize: 16,
-    lineHeight: 1.5,
-  },
-  companyInfo: {
-    color: colors.textColor2,
-    textAlign: "center",
-  },
-  link: {
-    color: "#625afa",
-    fontWeight: "bold",
-    textDecoration: "none",
-  },
-  legal: {
-    marginTop: 20,
-    fontSize: 12,
-    color: colors.textColor2,
-    lineHeight: 1.4,
-  },
-});
-
-const company = {
-  name: "Zinvero",
-  company: "GUΑRΑΝТЕЕD GRЕΑТ SЕRVIСЕ LТD",
-  address: "Dept 6162 43 Owston Road, Carcroft, Doncaster, United Kingdom, DN6 8DA",
-  website: "zinvero.com",
-  email: "support@zinvero.com",
-  logo: "./public/logos/zinvero-logo.png", // Official SVG logo
-  companyNumber: "15982295",
-};
-
-const Receipt = ({
-  receiptId = "8978e5a92857",
-  email = "johndoe@gmail.com",
-  date = `${Date.now()}`,
-  tokens,
-  description,
-  amount,
-  currency,
-}: {
-  receiptId?: string;
-  email: string;
-  date: string;
-  tokens: number;
-  description: string;
-  amount: number;
-  currency: string;
-}) => (
-  <Document>
-    <Page size="A4" style={styles.page}>
-      <View>
-        <View style={styles.header}>
-          {/* eslint-disable-next-line jsx-a11y/alt-text */}
-          <Image src={company.logo} style={styles.headerImage} />
-        </View>
-
-        <View style={styles.titleSection}>
-          <Text style={styles.title}>Receipt from {company.name}</Text>
-          <Text style={styles.subtitle}>Receipt #{receiptId}</Text>
-        </View>
-
-        <View style={styles.infoRow}>
-          <View>
-            <Text style={styles.label}>Client Email</Text>
-            <Text style={styles.value}>{email}</Text>
-          </View>
-        </View>
-
-        <View style={styles.infoRow}>
-          <View style={styles.infoBlock}>
-            <Text style={styles.label}>Amount paid</Text>
-            <Text style={styles.value}>
-              {(amount / 100).toFixed(2)} {currency}
-            </Text>
-          </View>
-          <View style={styles.infoBlock}>
-            <Text style={styles.label}>Date paid</Text>
-            <Text style={styles.value}>{date}</Text>
-          </View>
-          <View style={styles.infoBlock}>
-            <Text style={styles.label}>Payment method</Text>
-            <Text style={styles.value}>Paid by Card</Text>
-          </View>
-        </View>
-
-        <Text style={styles.summaryTitle}>Summary</Text>
-
-        <View style={styles.block}>
-          <View style={styles.itemRowFirst}>
-            <Text style={styles.itemText}>{description}</Text>
-            <Text style={styles.itemText}>
-              {(amount / 100).toFixed(2)} {currency}
-            </Text>
-          </View>
-          <View style={styles.itemRow}>
-            <Text style={[styles.itemText, { fontWeight: "bold" }]}>
-              Amount paid
-            </Text>
-            <Text style={[styles.itemText, { fontWeight: "bold" }]}>
-              {(amount / 100).toFixed(2)} {currency}
-            </Text>
-          </View>
-        </View>
-
-        <Text style={styles.footer}>
-          If you have any questions contact us at{" "}
-          <Link style={styles.link} src={`mailto:${company.email}`}>
-            {company.email}
-          </Link>
-          .
-        </Text>
-
-        <Text style={styles.legal}>
-          You&apos;re receiving this email because you made a purchase at{" "}
-          {company.name}.
-        </Text>
-      </View>
-      <Text style={styles.companyInfo}>
-        <Text>
-          {company.name} | {company.company} | {company.companyNumber}
-          {"\n"}
-          {company.address}
-          {"\n"}
-          Website:{" "}
-          <Link style={styles.link} src={`https://${company.website}`}>
-            {company.website}
-          </Link>{" "}
-          | Email:{" "}
-          <Link style={styles.link} src={`mailto:${company.email}`}>
-            {company.email}
-          </Link>
-        </Text>
-      </Text>
-    </Page>
-  </Document>
-);
-
-export default Receipt;
+import React from "react";
+import {
+  Document,
+  Page,
+  Text,
+  View,
+  StyleSheet,
+  Image,
+  Link,
+  Font,
+} from "@react-pdf/renderer";
+
+const colors = {
+  background: "#0f172a",
+  textColor1: "#ffffff",
+  textColor2: "#a1aac0",
+  textColor3: "#525f7f",
+  textColor4: "#687385",
+};
+
+Font.register({
+  family: "Nunito",
+  src: `./public/assets/fonts/Nunito-Regular.ttf`,
+});
+
+const styles = StyleSheet.create({
+  page: {
+    display: "flex",
+    justifyContent: "space-between",
+    backgroundColor: colors.background,
+    padding: 40,
+    fontSize: 12,
+    fontFamily: "Nunito",
+  },
+  header: {
+    display: "flex",
+    alignItems: "center",
+    justifyContent: "center",
+    borderRadius: 5,
+    padding: 0,
+    height: 100,
+  },
+  headerImage: {
+    width: 300,
+  },
+  titleSection: {
+    marginTop: 48,
+    textAlign: "center",
+  },
+  title: {
+    fontSize: 24,
+    color: colors.textColor1,
+    fontWeight: 700,
+    marginBottom: 4,
+  },
+  subtitle: {
+    paddingTop: 4,
+    fontSize: 15,
+    color: colors.textColor2,
+  },
+  infoRow: {
+    flexDirection: "row",
+    justifyContent: "space-between",
+    marginTop: 32,
+  },
+  infoBlock: {
+    width: "30%",
+  },
+  label: {
+    color: colors.textColor1,
+    fontWeight: 700,
+    fontSize: 10,
+    textTransform: "uppercase",
+    marginBottom: 2,
+  },
+  value: {
+    paddingTop: 6,
+    color: colors.textColor2,
+    fontSize: 15,
+    lineHeight: 1.4,
+  },
+  summaryTitle: {
+    marginTop: 32,
+    fontWeight: 700,
+    fontSize: 10,
+    color: colors.textColor1,
+    textTransform: "uppercase",
+    marginBottom: 12,
+  },
+  block: {
+    // backgroundColor: colors.background2,
+    // borderWidth: 1,
+    // borderColor: colors.textColor2,
+    // borderRadius: 8,
+    // padding: 12,
+  },
+  itemRow: {
+    flexDirection: "row",
+    justifyContent: "space-between",
+    // borderBottom: "1px solid #e6ebf1",
+    paddingVertical: 8,
+  },
+  itemRowFirst: {
+    flexDirection: "row",
+    justifyContent: "space-between",
+    borderBottom: "1px solid #e6ebf1",
+    paddingVertical: 8,
+  },
+
+  itemText: {
+    color: colors.textColor2,
+    fontSize: 15,
+  },
+  footer: {
+    marginTop: 40,
+    color: colors.textColor2,
+    fontSize: 16,
+    lineHeight: 1.5,
+  },
+  companyInfo: {
+    color: colors.textColor2,
+    textAlign: "center",
+  },
+  link: {
+    color: "#625afa",
+    fontWeight: "bold",
+    textDecoration: "none",
+  },
+  legal: {
+    marginTop: 20,
+    fontSize: 12,
+    color: colors.textColor2,
+    lineHeight: 1.4,
+  },
+});
+
+const company = {
+  name: "Nerbixa",
+  company: "GUΑRΑΝТЕЕD GRЕΑТ SЕRVIСЕ LТD",
+  address: "Dept 6162 43 Owston Road, Carcroft, Doncaster, United Kingdom, DN6 8DA",
+  website: "nerbixa.com",
+  email: "support@nerbixa.com",
+  logo: "./public/logos/nerbixa-logo.png", // Official SVG logo
+  companyNumber: "15982295",
+};
+
+const Receipt = ({
+  receiptId = "8978e5a92857",
+  email = "johndoe@gmail.com",
+  date = `${Date.now()}`,
+  tokens,
+  description,
+  amount,
+  currency,
+}: {
+  receiptId?: string;
+  email: string;
+  date: string;
+  tokens: number;
+  description: string;
+  amount: number;
+  currency: string;
+}) => (
+  <Document>
+    <Page size="A4" style={styles.page}>
+      <View>
+        <View style={styles.header}>
+          {/* eslint-disable-next-line jsx-a11y/alt-text */}
+          <Image src={company.logo} style={styles.headerImage} />
+        </View>
+
+        <View style={styles.titleSection}>
+          <Text style={styles.title}>Receipt from {company.name}</Text>
+          <Text style={styles.subtitle}>Receipt #{receiptId}</Text>
+        </View>
+
+        <View style={styles.infoRow}>
+          <View>
+            <Text style={styles.label}>Client Email</Text>
+            <Text style={styles.value}>{email}</Text>
+          </View>
+        </View>
+
+        <View style={styles.infoRow}>
+          <View style={styles.infoBlock}>
+            <Text style={styles.label}>Amount paid</Text>
+            <Text style={styles.value}>
+              {(amount / 100).toFixed(2)} {currency}
+            </Text>
+          </View>
+          <View style={styles.infoBlock}>
+            <Text style={styles.label}>Date paid</Text>
+            <Text style={styles.value}>{date}</Text>
+          </View>
+          <View style={styles.infoBlock}>
+            <Text style={styles.label}>Payment method</Text>
+            <Text style={styles.value}>Paid by Card</Text>
+          </View>
+        </View>
+
+        <Text style={styles.summaryTitle}>Summary</Text>
+
+        <View style={styles.block}>
+          <View style={styles.itemRowFirst}>
+            <Text style={styles.itemText}>{description}</Text>
+            <Text style={styles.itemText}>
+              {(amount / 100).toFixed(2)} {currency}
+            </Text>
+          </View>
+          <View style={styles.itemRow}>
+            <Text style={[styles.itemText, { fontWeight: "bold" }]}>
+              Amount paid
+            </Text>
+            <Text style={[styles.itemText, { fontWeight: "bold" }]}>
+              {(amount / 100).toFixed(2)} {currency}
+            </Text>
+          </View>
+        </View>
+
+        <Text style={styles.footer}>
+          If you have any questions contact us at{" "}
+          <Link style={styles.link} src={`mailto:${company.email}`}>
+            {company.email}
+          </Link>
+          .
+        </Text>
+
+        <Text style={styles.legal}>
+          You&apos;re receiving this email because you made a purchase at{" "}
+          {company.name}.
+        </Text>
+      </View>
+      <Text style={styles.companyInfo}>
+        <Text>
+          {company.name} | {company.company} | {company.companyNumber}
+          {"\n"}
+          {company.address}
+          {"\n"}
+          Website:{" "}
+          <Link style={styles.link} src={`https://${company.website}`}>
+            {company.website}
+          </Link>{" "}
+          | Email:{" "}
+          <Link style={styles.link} src={`mailto:${company.email}`}>
+            {company.email}
+          </Link>
+        </Text>
+      </Text>
+    </Page>
+  </Document>
+);
+
+export default Receipt;
diff --git a/components/pro-modal.tsx b/components/pro-modal.tsx
index 51a318c..efa4d5e 100644
--- a/components/pro-modal.tsx
+++ b/components/pro-modal.tsx
@@ -1,406 +1,406 @@
-"use client";
-
-import { useEffect, useState } from "react";
-import { Zap } from "lucide-react";
-import { toast } from "react-hot-toast";
-import { motion } from "framer-motion";
-import classNames from "classnames";
-import {
-  Dialog,
-  DialogContent,
-  DialogHeader,
-  DialogTitle,
-  DialogDescription,
-  DialogFooter,
-} from "@/components/ui/dialog";
-import { Input } from "@/components/ui/input";
-import { Label } from "@/components/ui/label";
-import { Button } from "@/components/ui/button";
-import { useProModal } from "@/hooks/use-pro-modal";
-import { GENERATIONS_PRICE, toolsModal } from "@/constants";
-import { Card } from "@/components/ui/card";
-import { cn } from "@/lib/utils";
-import { useRouter } from "next/navigation";
-import { currencies, currenciesRate, Currency } from "@/constants/index";
-import Image from "next/image";
-import CardLogo from "@/public/card-logo.png";
-import { z } from "zod";
-import { useAuth, useUser } from "@clerk/nextjs";
-import { useForm } from "react-hook-form";
-import { zodResolver } from "@hookform/resolvers/zod";
-import { NetworkPaymentWidget } from "@/components/networx-payment-widget";
-import {
-  Checkbox,
-  Field,
-  Listbox,
-  ListboxButton,
-  ListboxOption,
-  ListboxOptions,
-} from "@headlessui/react";
-
-const formSchema = z.object({
-  generations: z
-    .number()
-    .positive({ message: "Generations count must be positive" })
-    .min(1, { message: "At least one generation is required" }),
-  currency: z.enum(currencies),
-  policies: z.boolean().refine((val) => val === true, {
-    message: "You must agree to the terms and conditions",
-  }),
-});
-
-export const ProModal = () => {
-  const router = useRouter();
-  const { userId } = useAuth();
-  const { user } = useUser();
-  const proModal = useProModal();
-  const [loading, setLoading] = useState(false);
-  const [generationPrice, setGenerationPrice] = useState(GENERATIONS_PRICE);
-  const [generationsCount, setGenerationsCount] = useState(50);
-  const [activeButton, setActiveButton] = useState(50);
-  const [showPaymentWidget, setShowPaymentWidget] = useState(false);
-
-  const {
-    register,
-    handleSubmit,
-    setValue,
-    watch,
-    formState: { errors },
-  } = useForm<z.infer<typeof formSchema>>({
-    resolver: zodResolver(formSchema),
-    defaultValues: {
-      generations: 50,
-      currency: "EUR",
-      policies: false,
-    },
-  });
-
-  const onSubmit = async () => {
-    try {
-      setLoading(true);
-      // Показываем платежный виджет вместо закрытия модала
-      setShowPaymentWidget(true);
-    } catch (error) {
-      toast.error("Something went wrong");
-    } finally {
-      setLoading(false);
-    }
-  };
-
-  const handleCurrencyChange = (currency: Currency) => {
-    setValue("currency", currency);
-    setGenerationPrice(GENERATIONS_PRICE * currenciesRate[currency]);
-  };
-
-  const handleButtonClick = (value: number) => {
-    setActiveButton(value);
-    setValue("generations", value); // Обновляем значение в форме
-  };
-
-  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
-    const value = Number(e.target.value);
-    if (!isNaN(value) && value > 0) {
-      setValue("generations", value); // Обновляем значение в форме
-    } else {
-      setValue("generations", 1); // Установите значение по умолчанию, если значение некорректно
-    }
-  };
-
-  const handleInputClick = (e: React.MouseEvent<HTMLInputElement>) => {
-    setActiveButton(999);
-    if ((e.target as HTMLInputElement).value) {
-      const value = Number((e.target as HTMLInputElement).value);
-      if (!isNaN(value)) {
-        setValue("generations", value); // Обновляем значение в форме
-      }
-    }
-  };
-
-  const handleCheckboxChange = (checked: boolean) => {
-    setValue("policies", checked); // Обновляем значение в форме
-  };
-
-  // Обработчики для платежного виджета
-  const handlePaymentSuccess = (transactionData: any) => {
-    console.log('Payment successful:', transactionData);
-    proModal.onClose();
-    setShowPaymentWidget(false);
-    router.refresh();
-    toast.success("Generations added successfully!");
-  };
-
-  const handlePaymentError = (error: any) => {
-    console.error('Payment error:', error);
-    setShowPaymentWidget(false);
-    toast.error("Payment failed. Please try again.");
-  };
-
-  const handlePaymentCancel = () => {
-    console.log('Payment canceled');
-    setShowPaymentWidget(false);
-    toast("Payment was canceled");
-  };
-
-  const handleBackToForm = () => {
-    setShowPaymentWidget(false);
-  };
-
-  const handleModalClose = () => {
-    setShowPaymentWidget(false);
-    proModal.onClose();
-  };
-
-  return (
-    <Dialog open={proModal.isOpen} onOpenChange={handleModalClose}>
-      <DialogContent className="bg-white border-gray-200" style={{fontFamily: "Inter, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif"}}>
-        <DialogHeader>
-          <DialogTitle className="flex justify-center items-center flex-col gap-y-4 pb-2 bg-white">
-            <div className="flex items-center gap-x-2 font-bold text-xl text-gray-900 bg-white">
-              {showPaymentWidget ? "Complete Payment" : "Buy More"}
-            </div>
-          </DialogTitle>
-          {!showPaymentWidget && (
-            <DialogDescription className="text-center pt-2 text-gray-700 font-medium">
-              <div className="grid grid-cols-2 gap-3">
-                {toolsModal.map((tool) => (
-                  <Card
-                    key={tool.href}
-                    className="p-4 border-gray-200 flex flex-col items-center justify-center bg-white text-gray-900 hover:shadow-md transition-shadow"
-                  >
-                    <div className="p-3 w-fit rounded-lg bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 mb-3">
-                      <tool.icon className="w-8 h-8 text-white" />
-                    </div>
-                    <div className="font-semibold text-sm text-center">{tool.label}</div>
-                  </Card>
-                ))}
-              </div>
-            </DialogDescription>
-          )}
-        </DialogHeader>
-        
-        {showPaymentWidget ? (
-          <div className="space-y-4">
-            <div className="flex items-center justify-between mb-4">
-              <Button
-                onClick={handleBackToForm}
-                variant="outline"
-                size="sm"
-                className="text-black border-gray-300 hover:bg-gray-50"
-              >
-                ← Back to Selection
-              </Button>
-              <div className="text-black text-sm">
-                {watch("generations")} Generations - {(watch("generations") * generationPrice).toFixed(2)} {watch("currency")}
-              </div>
-            </div>
-            
-            <NetworkPaymentWidget
-              amount={watch("generations") * generationPrice}
-              currency={watch("currency")}
-              orderId={`gen_${userId}_${Date.now()}`}
-              description={`Zinvero Generations Purchase (${watch("generations")} Tokens)`}
-              customerEmail={user?.emailAddresses[0].emailAddress || ""}
-              onSuccess={handlePaymentSuccess}
-              onError={handlePaymentError}
-              onCancel={handlePaymentCancel}
-            />
-          </div>
-        ) : (
-          <form onSubmit={handleSubmit(onSubmit)}>
-          <div className="w-full items-center gap-1.5">
-            <div className="grid grid-cols-2">
-              <p className="text-sm font-medium leading-sm text-black">Price</p>
-              <div className="flex gap-2 justify-end">
-                <p className="text-sm font-medium leading-sm text-end text-black">
-                  {(watch("generations") * generationPrice).toFixed(2)}
-                </p>
-                <Listbox
-                  {...register("currency")}
-                  value={watch("currency")}
-                  onChange={handleCurrencyChange}
-                  disabled={loading}
-                >
-                  <div className="relative">
-                    <ListboxButton
-                      className={`w-[60px] h-[24px] text-center rounded-md sm:rounded-lg
-                      border text-sm font-medium flex items-center justify-center
-                      bg-white text-black
-                      ${
-                        watch("currency")
-                          ? "border-cyan-500"
-                          : "border-gray-300"
-                      }
-                      outline-none ring-0 focus:outline-none focus:ring-0 active:ring-0
-                      hover:outline-none hover:ring-0 hover:border-gray-400 hover:bg-gray-50
-                      focus:border-gray-400 active:border-gray-400
-                      transition-all duration-200 appearance-none shadow-sm`}
-                    >
-                      {watch("currency")}
-                    </ListboxButton>
-                    <ListboxOptions className="absolute left-0 z-10 mt-1 grid w-full origin-top-right gap-0.5 rounded-md sm:rounded-lg border border-gray-300 bg-white p-1 shadow-lg outline-none">
-                      {currencies.map((currency, idx) => (
-                        <ListboxOption
-                          key={idx}
-                          className={({ active }) =>
-                            `flex cursor-pointer items-center justify-center rounded-md text-sm transition
-                            bg-white text-black
-                            ${
-                              active
-                                ? "bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 text-white font-medium"
-                                : "border border-transparent hover:bg-gray-50"
-                            }`
-                          }
-                          value={currency}
-                        >
-                          {currency}
-                        </ListboxOption>
-                      ))}
-                    </ListboxOptions>
-                  </div>
-                </Listbox>
-              </div>
-            </div>
-            <div className="grid grid-cols-2 pb-2 text-black">
-              <p className="text-sm font-medium leading-sm">Generations</p>
-              <p className="text-sm font-medium leading-sm text-end">
-                {watch("generations")} Generations
-              </p>
-            </div>
-            <Label htmlFor="generations" className="text-black">
-              Choose generations option
-            </Label>
-            <div className="grid grid-cols-2 sm:grid-cols-4 gap-3 w-full pt-2">
-              {[50, 100, 500].map((value) => (
-                <Button
-                  key={value}
-                  type="button"
-                  disabled={loading}
-                  onClick={() => handleButtonClick(value)}
-                  variant="ghost"
-                  className={classNames(
-                    "!bg-white !text-gray-700 !border !border-gray-300",
-                    "!hover:bg-gray-50 !hover:text-gray-900 !hover:border-gray-400",
-                    "!focus:bg-gray-50 !focus:text-gray-900 !focus:border-gray-400",
-                    "!active:bg-gray-50 !active:text-gray-900 !active:border-gray-400",
-                    "focus:outline-none ring-0 focus:ring-0 active:ring-0 transition-all duration-300 shadow-sm",
-                    {
-                      "!bg-gradient-to-r !from-cyan-400 !via-blue-500 !to-indigo-600 !text-white !border-transparent !shadow-lg":
-                        activeButton === value,
-                    }
-                  )}
-                >
-                  {value}
-                </Button>
-              ))}
-              <Input
-                disabled={loading}
-                type="number"
-                id="generations"
-                placeholder="Other"
-                {...register("generations", { valueAsNumber: true })}
-                onClick={handleInputClick}
-                onChange={handleInputChange}
-                min={1}
-                className={classNames(
-                  "text-center pl-6 py-2 text-sm font-medium",
-                  "!bg-white !text-gray-700 !border !border-gray-300",
-                  "!hover:bg-gray-50 !hover:text-gray-900 !hover:border-gray-400",
-                  "!focus:bg-gray-50 !focus:text-gray-900 !focus:border-gray-400",
-                  "!active:bg-gray-50 !active:text-gray-900 !active:border-gray-400",
-                  "focus:outline-none ring-0 focus:ring-0 active:ring-0 transition-all duration-300 shadow-sm",
-                  {
-                    "!bg-gradient-to-r !from-cyan-400 !via-blue-500 !to-indigo-600 !text-white !border-transparent !shadow-lg":
-                      activeButton === 999,
-                  }
-                )}
-              />
-            </div>
-            {errors.generations && (
-              <p className="text-red-600 text-sm pt-1">
-                {errors.generations.message}
-              </p>
-            )}
-          </div>
-          <div className="mt-3">
-            <Field className="flex items-center gap-2">
-              <Checkbox
-                {...register("policies")}
-                checked={watch("policies")}
-                onChange={handleCheckboxChange}
-                className="group block w-[1rem] h-[1rem] rounded border border-gray-300 bg-white data-[checked]:bg-gradient-to-r data-[checked]:from-cyan-400 data-[checked]:via-blue-500 data-[checked]:to-indigo-600"
-              >
-                <svg
-                  className="stroke-white opacity-0 group-data-[checked]:opacity-100"
-                  viewBox="0 0 14 14"
-                  fill="none"
-                >
-                  <path
-                    d="M3 8L6 11L11 3.5"
-                    strokeWidth={2}
-                    strokeLinecap="round"
-                    strokeLinejoin="round"
-                  />
-                </svg>
-              </Checkbox>
-              <Label
-                className={"text-sm leading-loose tracking-tight text-gray-700"}
-              >
-                I agree to the{" "}
-                <a
-                  href="/terms-and-conditions"
-                  className="bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 bg-clip-text text-transparent hover:underline hover:underline-offset-4"
-                >
-                  Terms of Service
-                </a>{" "}
-                and{" "}
-                <a
-                  href="/privacy-policy"
-                  className="bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 bg-clip-text text-transparent hover:underline hover:underline-offset-4"
-                >
-                  Privacy Policy
-                </a>
-                .
-              </Label>
-            </Field>
-            {errors.policies && (
-              <p className="text-red-600 text-sm">{errors.policies.message}</p>
-            )}
-          </div>
-          <DialogFooter className="mt-3">
-            <motion.div
-              whileHover={{ scale: 1.05 }}
-              whileTap={{ scale: 0.98 }}
-              className="w-full"
-            >
-              <Button
-                disabled={loading}
-                size="lg"
-                type="submit"
-                className="w-full bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 hover:from-cyan-500 hover:via-blue-600 hover:to-indigo-700 text-white font-bold py-3 px-4 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
-              >
-                Buy Generations
-                <Zap className="w-4 h-4 ml-2 fill-white" />
-              </Button>
-            </motion.div>
-          </DialogFooter>
-        </form>
-        )}
-        
-        {!showPaymentWidget && (
-          <>
-            <Image
-              alt="cards logo"
-              className="w-48 m-auto mt-1"
-              src={CardLogo.src}
-              width={CardLogo.width}
-              height={CardLogo.height}
-            />
-            <Label className="text-center font-normal text-xs text-black">
-            GUΑRΑΝТЕЕD GRЕΑТ SЕRVIСЕ LТD - Dept 6162 43 Owston Road, Carcroft, Doncaster, United Kingdom, DN6 8DA
-            </Label>
-          </>
-        )}
-      </DialogContent>
-    </Dialog>
-  );
-};
+"use client";
+
+import { useEffect, useState } from "react";
+import { Zap } from "lucide-react";
+import { toast } from "react-hot-toast";
+import { motion } from "framer-motion";
+import classNames from "classnames";
+import {
+  Dialog,
+  DialogContent,
+  DialogHeader,
+  DialogTitle,
+  DialogDescription,
+  DialogFooter,
+} from "@/components/ui/dialog";
+import { Input } from "@/components/ui/input";
+import { Label } from "@/components/ui/label";
+import { Button } from "@/components/ui/button";
+import { useProModal } from "@/hooks/use-pro-modal";
+import { GENERATIONS_PRICE, toolsModal } from "@/constants";
+import { Card } from "@/components/ui/card";
+import { cn } from "@/lib/utils";
+import { useRouter } from "next/navigation";
+import { currencies, currenciesRate, Currency } from "@/constants/index";
+import Image from "next/image";
+import CardLogo from "@/public/card-logo.png";
+import { z } from "zod";
+import { useAuth, useUser } from "@clerk/nextjs";
+import { useForm } from "react-hook-form";
+import { zodResolver } from "@hookform/resolvers/zod";
+import { NetworkPaymentWidget } from "@/components/networx-payment-widget";
+import {
+  Checkbox,
+  Field,
+  Listbox,
+  ListboxButton,
+  ListboxOption,
+  ListboxOptions,
+} from "@headlessui/react";
+
+const formSchema = z.object({
+  generations: z
+    .number()
+    .positive({ message: "Generations count must be positive" })
+    .min(1, { message: "At least one generation is required" }),
+  currency: z.enum(currencies),
+  policies: z.boolean().refine((val) => val === true, {
+    message: "You must agree to the terms and conditions",
+  }),
+});
+
+export const ProModal = () => {
+  const router = useRouter();
+  const { userId } = useAuth();
+  const { user } = useUser();
+  const proModal = useProModal();
+  const [loading, setLoading] = useState(false);
+  const [generationPrice, setGenerationPrice] = useState(GENERATIONS_PRICE);
+  const [generationsCount, setGenerationsCount] = useState(50);
+  const [activeButton, setActiveButton] = useState(50);
+  const [showPaymentWidget, setShowPaymentWidget] = useState(false);
+
+  const {
+    register,
+    handleSubmit,
+    setValue,
+    watch,
+    formState: { errors },
+  } = useForm<z.infer<typeof formSchema>>({
+    resolver: zodResolver(formSchema),
+    defaultValues: {
+      generations: 50,
+      currency: "EUR",
+      policies: false,
+    },
+  });
+
+  const onSubmit = async () => {
+    try {
+      setLoading(true);
+      // Показываем платежный виджет вместо закрытия модала
+      setShowPaymentWidget(true);
+    } catch (error) {
+      toast.error("Something went wrong");
+    } finally {
+      setLoading(false);
+    }
+  };
+
+  const handleCurrencyChange = (currency: Currency) => {
+    setValue("currency", currency);
+    setGenerationPrice(GENERATIONS_PRICE * currenciesRate[currency]);
+  };
+
+  const handleButtonClick = (value: number) => {
+    setActiveButton(value);
+    setValue("generations", value); // Обновляем значение в форме
+  };
+
+  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
+    const value = Number(e.target.value);
+    if (!isNaN(value) && value > 0) {
+      setValue("generations", value); // Обновляем значение в форме
+    } else {
+      setValue("generations", 1); // Установите значение по умолчанию, если значение некорректно
+    }
+  };
+
+  const handleInputClick = (e: React.MouseEvent<HTMLInputElement>) => {
+    setActiveButton(999);
+    if ((e.target as HTMLInputElement).value) {
+      const value = Number((e.target as HTMLInputElement).value);
+      if (!isNaN(value)) {
+        setValue("generations", value); // Обновляем значение в форме
+      }
+    }
+  };
+
+  const handleCheckboxChange = (checked: boolean) => {
+    setValue("policies", checked); // Обновляем значение в форме
+  };
+
+  // Обработчики для платежного виджета
+  const handlePaymentSuccess = (transactionData: any) => {
+    console.log('Payment successful:', transactionData);
+    proModal.onClose();
+    setShowPaymentWidget(false);
+    router.refresh();
+    toast.success("Generations added successfully!");
+  };
+
+  const handlePaymentError = (error: any) => {
+    console.error('Payment error:', error);
+    setShowPaymentWidget(false);
+    toast.error("Payment failed. Please try again.");
+  };
+
+  const handlePaymentCancel = () => {
+    console.log('Payment canceled');
+    setShowPaymentWidget(false);
+    toast("Payment was canceled");
+  };
+
+  const handleBackToForm = () => {
+    setShowPaymentWidget(false);
+  };
+
+  const handleModalClose = () => {
+    setShowPaymentWidget(false);
+    proModal.onClose();
+  };
+
+  return (
+    <Dialog open={proModal.isOpen} onOpenChange={handleModalClose}>
+      <DialogContent className="bg-white border-gray-200" style={{fontFamily: "Inter, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif"}}>
+        <DialogHeader>
+          <DialogTitle className="flex justify-center items-center flex-col gap-y-4 pb-2 bg-white">
+            <div className="flex items-center gap-x-2 font-bold text-xl text-gray-900 bg-white">
+              {showPaymentWidget ? "Complete Payment" : "Buy More"}
+            </div>
+          </DialogTitle>
+          {!showPaymentWidget && (
+            <DialogDescription className="text-center pt-2 text-gray-700 font-medium">
+              <div className="grid grid-cols-2 gap-3">
+                {toolsModal.map((tool) => (
+                  <Card
+                    key={tool.href}
+                    className="p-4 border-gray-200 flex flex-col items-center justify-center bg-white text-gray-900 hover:shadow-md transition-shadow"
+                  >
+                    <div className="p-3 w-fit rounded-lg bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 mb-3">
+                      <tool.icon className="w-8 h-8 text-white" />
+                    </div>
+                    <div className="font-semibold text-sm text-center">{tool.label}</div>
+                  </Card>
+                ))}
+              </div>
+            </DialogDescription>
+          )}
+        </DialogHeader>
+        
+        {showPaymentWidget ? (
+          <div className="space-y-4">
+            <div className="flex items-center justify-between mb-4">
+              <Button
+                onClick={handleBackToForm}
+                variant="outline"
+                size="sm"
+                className="text-black border-gray-300 hover:bg-gray-50"
+              >
+                ← Back to Selection
+              </Button>
+              <div className="text-black text-sm">
+                {watch("generations")} Generations - {(watch("generations") * generationPrice).toFixed(2)} {watch("currency")}
+              </div>
+            </div>
+            
+            <NetworkPaymentWidget
+              amount={watch("generations") * generationPrice}
+              currency={watch("currency")}
+              orderId={`gen_${userId}_${Date.now()}`}
+              description={`Nerbixa Generations Purchase (${watch("generations")} Tokens)`}
+              customerEmail={user?.emailAddresses[0].emailAddress || ""}
+              onSuccess={handlePaymentSuccess}
+              onError={handlePaymentError}
+              onCancel={handlePaymentCancel}
+            />
+          </div>
+        ) : (
+          <form onSubmit={handleSubmit(onSubmit)}>
+          <div className="w-full items-center gap-1.5">
+            <div className="grid grid-cols-2">
+              <p className="text-sm font-medium leading-sm text-black">Price</p>
+              <div className="flex gap-2 justify-end">
+                <p className="text-sm font-medium leading-sm text-end text-black">
+                  {(watch("generations") * generationPrice).toFixed(2)}
+                </p>
+                <Listbox
+                  {...register("currency")}
+                  value={watch("currency")}
+                  onChange={handleCurrencyChange}
+                  disabled={loading}
+                >
+                  <div className="relative">
+                    <ListboxButton
+                      className={`w-[60px] h-[24px] text-center rounded-md sm:rounded-lg
+                      border text-sm font-medium flex items-center justify-center
+                      bg-white text-black
+                      ${
+                        watch("currency")
+                          ? "border-cyan-500"
+                          : "border-gray-300"
+                      }
+                      outline-none ring-0 focus:outline-none focus:ring-0 active:ring-0
+                      hover:outline-none hover:ring-0 hover:border-gray-400 hover:bg-gray-50
+                      focus:border-gray-400 active:border-gray-400
+                      transition-all duration-200 appearance-none shadow-sm`}
+                    >
+                      {watch("currency")}
+                    </ListboxButton>
+                    <ListboxOptions className="absolute left-0 z-10 mt-1 grid w-full origin-top-right gap-0.5 rounded-md sm:rounded-lg border border-gray-300 bg-white p-1 shadow-lg outline-none">
+                      {currencies.map((currency, idx) => (
+                        <ListboxOption
+                          key={idx}
+                          className={({ active }) =>
+                            `flex cursor-pointer items-center justify-center rounded-md text-sm transition
+                            bg-white text-black
+                            ${
+                              active
+                                ? "bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 text-white font-medium"
+                                : "border border-transparent hover:bg-gray-50"
+                            }`
+                          }
+                          value={currency}
+                        >
+                          {currency}
+                        </ListboxOption>
+                      ))}
+                    </ListboxOptions>
+                  </div>
+                </Listbox>
+              </div>
+            </div>
+            <div className="grid grid-cols-2 pb-2 text-black">
+              <p className="text-sm font-medium leading-sm">Generations</p>
+              <p className="text-sm font-medium leading-sm text-end">
+                {watch("generations")} Generations
+              </p>
+            </div>
+            <Label htmlFor="generations" className="text-black">
+              Choose generations option
+            </Label>
+            <div className="grid grid-cols-2 sm:grid-cols-4 gap-3 w-full pt-2">
+              {[50, 100, 500].map((value) => (
+                <Button
+                  key={value}
+                  type="button"
+                  disabled={loading}
+                  onClick={() => handleButtonClick(value)}
+                  variant="ghost"
+                  className={classNames(
+                    "!bg-white !text-gray-700 !border !border-gray-300",
+                    "!hover:bg-gray-50 !hover:text-gray-900 !hover:border-gray-400",
+                    "!focus:bg-gray-50 !focus:text-gray-900 !focus:border-gray-400",
+                    "!active:bg-gray-50 !active:text-gray-900 !active:border-gray-400",
+                    "focus:outline-none ring-0 focus:ring-0 active:ring-0 transition-all duration-300 shadow-sm",
+                    {
+                      "!bg-gradient-to-r !from-cyan-400 !via-blue-500 !to-indigo-600 !text-white !border-transparent !shadow-lg":
+                        activeButton === value,
+                    }
+                  )}
+                >
+                  {value}
+                </Button>
+              ))}
+              <Input
+                disabled={loading}
+                type="number"
+                id="generations"
+                placeholder="Other"
+                {...register("generations", { valueAsNumber: true })}
+                onClick={handleInputClick}
+                onChange={handleInputChange}
+                min={1}
+                className={classNames(
+                  "text-center pl-6 py-2 text-sm font-medium",
+                  "!bg-white !text-gray-700 !border !border-gray-300",
+                  "!hover:bg-gray-50 !hover:text-gray-900 !hover:border-gray-400",
+                  "!focus:bg-gray-50 !focus:text-gray-900 !focus:border-gray-400",
+                  "!active:bg-gray-50 !active:text-gray-900 !active:border-gray-400",
+                  "focus:outline-none ring-0 focus:ring-0 active:ring-0 transition-all duration-300 shadow-sm",
+                  {
+                    "!bg-gradient-to-r !from-cyan-400 !via-blue-500 !to-indigo-600 !text-white !border-transparent !shadow-lg":
+                      activeButton === 999,
+                  }
+                )}
+              />
+            </div>
+            {errors.generations && (
+              <p className="text-red-600 text-sm pt-1">
+                {errors.generations.message}
+              </p>
+            )}
+          </div>
+          <div className="mt-3">
+            <Field className="flex items-center gap-2">
+              <Checkbox
+                {...register("policies")}
+                checked={watch("policies")}
+                onChange={handleCheckboxChange}
+                className="group block w-[1rem] h-[1rem] rounded border border-gray-300 bg-white data-[checked]:bg-gradient-to-r data-[checked]:from-cyan-400 data-[checked]:via-blue-500 data-[checked]:to-indigo-600"
+              >
+                <svg
+                  className="stroke-white opacity-0 group-data-[checked]:opacity-100"
+                  viewBox="0 0 14 14"
+                  fill="none"
+                >
+                  <path
+                    d="M3 8L6 11L11 3.5"
+                    strokeWidth={2}
+                    strokeLinecap="round"
+                    strokeLinejoin="round"
+                  />
+                </svg>
+              </Checkbox>
+              <Label
+                className={"text-sm leading-loose tracking-tight text-gray-700"}
+              >
+                I agree to the{" "}
+                <a
+                  href="/terms-and-conditions"
+                  className="bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 bg-clip-text text-transparent hover:underline hover:underline-offset-4"
+                >
+                  Terms of Service
+                </a>{" "}
+                and{" "}
+                <a
+                  href="/privacy-policy"
+                  className="bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 bg-clip-text text-transparent hover:underline hover:underline-offset-4"
+                >
+                  Privacy Policy
+                </a>
+                .
+              </Label>
+            </Field>
+            {errors.policies && (
+              <p className="text-red-600 text-sm">{errors.policies.message}</p>
+            )}
+          </div>
+          <DialogFooter className="mt-3">
+            <motion.div
+              whileHover={{ scale: 1.05 }}
+              whileTap={{ scale: 0.98 }}
+              className="w-full"
+            >
+              <Button
+                disabled={loading}
+                size="lg"
+                type="submit"
+                className="w-full bg-gradient-to-r from-cyan-400 via-blue-500 to-indigo-600 hover:from-cyan-500 hover:via-blue-600 hover:to-indigo-700 text-white font-bold py-3 px-4 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
+              >
+                Buy Generations
+                <Zap className="w-4 h-4 ml-2 fill-white" />
+              </Button>
+            </motion.div>
+          </DialogFooter>
+        </form>
+        )}
+        
+        {!showPaymentWidget && (
+          <>
+            <Image
+              alt="cards logo"
+              className="w-48 m-auto mt-1"
+              src={CardLogo.src}
+              width={CardLogo.width}
+              height={CardLogo.height}
+            />
+            <Label className="text-center font-normal text-xs text-black">
+            GUΑRΑΝТЕЕD GRЕΑТ SЕRVIСЕ LТD - Dept 6162 43 Owston Road, Carcroft, Doncaster, United Kingdom, DN6 8DA
+            </Label>
+          </>
+        )}
+      </DialogContent>
+    </Dialog>
+  );
+};
diff --git a/components/shared/MediaUploader.tsx b/components/shared/MediaUploader.tsx
index 7b384ae..ddff2bd 100644
--- a/components/shared/MediaUploader.tsx
+++ b/components/shared/MediaUploader.tsx
@@ -66,7 +66,7 @@ const MediaUploader = ({
 
   return (
     <CldUploadWidget
-      uploadPreset="neuvisia"
+      uploadPreset="nerbixa"
       options={{
         multiple: false,
         resourceType: "image",
diff --git a/components/sidebar.tsx b/components/sidebar.tsx
index 8db01f2..bbbd1ea 100644
--- a/components/sidebar.tsx
+++ b/components/sidebar.tsx
@@ -1,70 +1,70 @@
-"use client";
-
-import Link from "next/link";
-import Image from "next/image";
-import { Montserrat } from "next/font/google";
-import { usePathname } from "next/navigation";
-
-import { cn } from "@/lib/utils";
-import { FreeCounter } from "@/components/free-counter";
-import { UserButton } from "@clerk/nextjs";
-
-import { tools } from "@/constants";
-
-const poppins = Montserrat({ weight: "600", subsets: ["latin"] });
-
-interface SidebarProps {
-  apiUsedGenerations: number;
-  apiAvailableGenerations: number;
-}
-
-export const Sidebar = ({
-  apiUsedGenerations = 0,
-  apiAvailableGenerations = 0,
-}: SidebarProps) => {
-  const pathname = usePathname();
-
-  return (
-    <div className="py-4 flex flex-col h-full bg-slate-900 text-white border-r border-white/10 overflow-y-auto sidebar overflow-x-hidden">
-      <div className="px-3 py-2 flex-1">
-        <Link href="/dashboard" className="flex items-center pl-3 mb-14">
-          <Image
-            width={"150"}
-            height={"60"}
-            className="mr-4"
-            alt="Logo"
-            src="/logos/zinvero-logo.png"
-          />
-        </Link>
-        <div className="space-y-1">
-          {tools.map((route) => (
-            <Link
-              key={route.href}
-              href={route.href}
-              className={cn(
-                "text-sm group flex p-3 w-full justify-start font-medium cursor-pointer hover:text-white hover:bg-white/10 rounded-lg transition",
-                pathname === route.href
-                  ? "text-white bg-white/10"
-                  : "text-zinc-400"
-              )}
-            >
-              <div className="flex items-center flex-1">
-                <route.icon className={cn("h-5 w-5 mr-3", route.color)} />
-                {route.label}
-              </div>
-            </Link>
-          ))}
-        </div>
-      </div>
-      <div className="px-3 py-2">
-        <div className="text-sm group flex w-full justify-start font-medium cursor-pointer hover:text-white hover:bg-white/10 rounded-lg transition text-white sidebarClerkButton">
-          <UserButton afterSignOutUrl="/" showName />
-        </div>
-      </div>
-      <FreeCounter
-        apiUsedGenerations={apiUsedGenerations}
-        apiAvailableGenerations={apiAvailableGenerations}
-      />
-    </div>
-  );
-};
+"use client";
+
+import Link from "next/link";
+import Image from "next/image";
+import { Montserrat } from "next/font/google";
+import { usePathname } from "next/navigation";
+
+import { cn } from "@/lib/utils";
+import { FreeCounter } from "@/components/free-counter";
+import { UserButton } from "@clerk/nextjs";
+
+import { tools } from "@/constants";
+
+const poppins = Montserrat({ weight: "600", subsets: ["latin"] });
+
+interface SidebarProps {
+  apiUsedGenerations: number;
+  apiAvailableGenerations: number;
+}
+
+export const Sidebar = ({
+  apiUsedGenerations = 0,
+  apiAvailableGenerations = 0,
+}: SidebarProps) => {
+  const pathname = usePathname();
+
+  return (
+    <div className="py-4 flex flex-col h-full bg-slate-900 text-white border-r border-white/10 overflow-y-auto sidebar overflow-x-hidden">
+      <div className="px-3 py-2 flex-1">
+        <Link href="/dashboard" className="flex items-center pl-3 mb-14">
+          <Image
+            width={"150"}
+            height={"60"}
+            className="mr-4"
+            alt="Logo"
+            src="/logos/nerbixa-logo.png"
+          />
+        </Link>
+        <div className="space-y-1">
+          {tools.map((route) => (
+            <Link
+              key={route.href}
+              href={route.href}
+              className={cn(
+                "text-sm group flex p-3 w-full justify-start font-medium cursor-pointer hover:text-white hover:bg-white/10 rounded-lg transition",
+                pathname === route.href
+                  ? "text-white bg-white/10"
+                  : "text-zinc-400"
+              )}
+            >
+              <div className="flex items-center flex-1">
+                <route.icon className={cn("h-5 w-5 mr-3", route.color)} />
+                {route.label}
+              </div>
+            </Link>
+          ))}
+        </div>
+      </div>
+      <div className="px-3 py-2">
+        <div className="text-sm group flex w-full justify-start font-medium cursor-pointer hover:text-white hover:bg-white/10 rounded-lg transition text-white sidebarClerkButton">
+          <UserButton afterSignOutUrl="/" showName />
+        </div>
+      </div>
+      <FreeCounter
+        apiUsedGenerations={apiUsedGenerations}
+        apiAvailableGenerations={apiAvailableGenerations}
+      />
+    </div>
+  );
+};
diff --git a/components/ui/ChatInterface.tsx b/components/ui/ChatInterface.tsx
index c9877d1..054b897 100644
--- a/components/ui/ChatInterface.tsx
+++ b/components/ui/ChatInterface.tsx
@@ -1,96 +1,96 @@
-import React from "react";
-import Image from "next/image";
-
-const ChatInterface = () => {
-  return (
-    <div className="flex-1 overflow-auto p-4 space-y-6">
-      {/* User message */}
-      <div className="flex gap-4 max-w-3xl mx-auto">
-        <div className="w-8 h-8 rounded-full bg-primary flex-shrink-0 flex items-center justify-center">
-          <Image
-            src="/images/icons/user.png"
-            alt="Text Icon"
-            width={18}
-            height={18}
-          />
-        </div>{" "}
-        <div className="flex-1">
-          <div className="font-medium mb-1 text-white">You</div>
-          <div className="bg-slate-700 rounded-lg p-4 shadow-sm dark:text-gray-200">
-            Create a 30-second script for a product video about a new smartphone
-            camera with advanced AI features.
-          </div>
-        </div>
-      </div>
-
-      {/* Model response */}
-      <div className="flex gap-4 max-w-3xl mx-auto">
-        <div className="w-8 h-8 rounded-full bg-primary flex-shrink-0 flex items-center justify-center">
-          <Image
-            src="/images/icons/ai.png"
-            alt="Text Icon"
-            width={20}
-            height={20}
-          />
-        </div>
-        <div className="flex-1">
-          <div className="font-medium text-white mb-1">Zinvero</div>
-          <div className="bg-slate-700 rounded-lg p-4 shadow-sm dark:text-gray-200">
-            <strong>SMARTPHONE AI CAMERA - 30 SEC SCRIPT</strong>
-            <br />
-            <br />
-            [Open with close-up of phone camera]
-            <br />
-            NARRATOR: &quot;Introducing the future of mobile photography.&quot;
-            <br />
-            <br />
-            [Show person taking photo in low light]
-            <br />
-            NARRATOR: &quot;Our new AI camera doesn&apos;t just take pictures -
-            it understands them.&quot;
-            <br />
-            <br />
-            [Split screen showing before/after AI enhancement]
-            <br />
-            NARRATOR: &quot;Advanced AI adjusts lighting, recognizes subjects,
-            and enhances details in real-time.&quot;
-            <br />
-            <br />
-            [Show various quick shots of amazing photos]
-            <br />
-            NARRATOR: &quot;Professional quality. Effortless results. Every
-            time.&quot;
-            <br />
-            <br />
-            [Product shot with logo]
-            <br />
-            NARRATOR: &quot;The new PhoneX Pro. Intelligence you can
-            capture.&quot;
-          </div>
-          <div className="flex items-center gap-2 mt-2">
-            <button className="text-white-300/10">
-              <svg
-                className="w-5 h-5"
-                fill="none"
-                stroke="currentColor"
-                viewBox="0 0 24 24"
-              >
-                <path
-                  strokeLinecap="round"
-                  strokeLinejoin="round"
-                  strokeWidth="2"
-                  d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
-                />
-              </svg>
-            </button>
-            <span className="text-sm text-gray-500 dark:text-gray-400">
-              5 tokens
-            </span>
-          </div>
-        </div>
-      </div>
-    </div>
-  );
-};
-
-export default ChatInterface;
+import React from "react";
+import Image from "next/image";
+
+const ChatInterface = () => {
+  return (
+    <div className="flex-1 overflow-auto p-4 space-y-6">
+      {/* User message */}
+      <div className="flex gap-4 max-w-3xl mx-auto">
+        <div className="w-8 h-8 rounded-full bg-primary flex-shrink-0 flex items-center justify-center">
+          <Image
+            src="/images/icons/user.png"
+            alt="Text Icon"
+            width={18}
+            height={18}
+          />
+        </div>{" "}
+        <div className="flex-1">
+          <div className="font-medium mb-1 text-white">You</div>
+          <div className="bg-slate-700 rounded-lg p-4 shadow-sm dark:text-gray-200">
+            Create a 30-second script for a product video about a new smartphone
+            camera with advanced AI features.
+          </div>
+        </div>
+      </div>
+
+      {/* Model response */}
+      <div className="flex gap-4 max-w-3xl mx-auto">
+        <div className="w-8 h-8 rounded-full bg-primary flex-shrink-0 flex items-center justify-center">
+          <Image
+            src="/images/icons/ai.png"
+            alt="Text Icon"
+            width={20}
+            height={20}
+          />
+        </div>
+        <div className="flex-1">
+          <div className="font-medium text-white mb-1">Nerbixa</div>
+          <div className="bg-slate-700 rounded-lg p-4 shadow-sm dark:text-gray-200">
+            <strong>SMARTPHONE AI CAMERA - 30 SEC SCRIPT</strong>
+            <br />
+            <br />
+            [Open with close-up of phone camera]
+            <br />
+            NARRATOR: &quot;Introducing the future of mobile photography.&quot;
+            <br />
+            <br />
+            [Show person taking photo in low light]
+            <br />
+            NARRATOR: &quot;Our new AI camera doesn&apos;t just take pictures -
+            it understands them.&quot;
+            <br />
+            <br />
+            [Split screen showing before/after AI enhancement]
+            <br />
+            NARRATOR: &quot;Advanced AI adjusts lighting, recognizes subjects,
+            and enhances details in real-time.&quot;
+            <br />
+            <br />
+            [Show various quick shots of amazing photos]
+            <br />
+            NARRATOR: &quot;Professional quality. Effortless results. Every
+            time.&quot;
+            <br />
+            <br />
+            [Product shot with logo]
+            <br />
+            NARRATOR: &quot;The new PhoneX Pro. Intelligence you can
+            capture.&quot;
+          </div>
+          <div className="flex items-center gap-2 mt-2">
+            <button className="text-white-300/10">
+              <svg
+                className="w-5 h-5"
+                fill="none"
+                stroke="currentColor"
+                viewBox="0 0 24 24"
+              >
+                <path
+                  strokeLinecap="round"
+                  strokeLinejoin="round"
+                  strokeWidth="2"
+                  d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
+                />
+              </svg>
+            </button>
+            <span className="text-sm text-gray-500 dark:text-gray-400">
+              5 tokens
+            </span>
+          </div>
+        </div>
+      </div>
+    </div>
+  );
+};
+
+export default ChatInterface;
diff --git a/package-lock.json b/package-lock.json
index 3ee28bc..7c10997 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -1,11 +1,11 @@
 {
-  "name": "neuvisia",
+  "name": "nerbixa",
   "version": "0.1.0",
   "lockfileVersion": 3,
   "requires": true,
   "packages": {
     "": {
-      "name": "neuvisia",
+      "name": "nerbixa",
       "version": "0.1.0",
       "dependencies": {
         "@bytescale/upload-widget-react": "^4.19.0",
diff --git a/package.json b/package.json
index 3d6a8fb..01bf96a 100644
--- a/package.json
+++ b/package.json
@@ -1,5 +1,5 @@
 {
-  "name": "neuvisia",
+  "name": "nerbixa",
   "version": "0.1.0",
   "private": true,
   "scripts": {
