/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Vladimir –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ—Å–ª–∏ Clerk webhook –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
 */

require('dotenv').config({ path: '.env.local' });
const { Pool } = require('pg');

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false
  }
});

const generateId = () => {
  const timestamp = Date.now().toString(36);
  const randomPart = Math.random().toString(36).substring(2, 15);
  return `${timestamp}${randomPart}`;
};

async function createVladimirUser() {
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Vladimir –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');

  const userData = {
    clerkId: 'user_34WzeL7bWWVIQqzDuqgSoDDlnL8',
    email: 'vladimir.serushko@gmail.com',
    firstName: 'Vladimir',
    lastName: 'Serushko',
    photo: 'https://img.clerk.com/eyJ0eXBlIjoiZGVmYXVsdCIsImlpZCI6Imluc18yb05jN2xsWVlBa3BGSHFMMU5uUkZ4TFJHWUIiLCJyaWQiOiJ1c2VyXzM0V3plTDdiV1dWSVFxekR1cWdTb0REbG5MOCIsImluaXRpYWxzIjoiVlMifQ',
    availableGenerations: 20,
    usedGenerations: 0
  };

  try {
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    console.log('1Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const existingUser = await pool.query(
      'SELECT * FROM "User" WHERE "clerkId" = $1',
      [userData.clerkId]
    );

    if (existingUser.rows.length > 0) {
      console.log('‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!');
      console.table(existingUser.rows[0]);
      console.log('\n‚úÖ –ù–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.');
      return;
    }

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º...\n');

    // –ù–∞—á–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    await pool.query('BEGIN');
    console.log('2Ô∏è‚É£  –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞—á–∞–ª–∞—Å—å...');

    // –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userId = generateId();
    const userResult = await pool.query(
      `INSERT INTO "User" 
        ("id", "clerkId", "email", "firstName", "lastName", "photo", "availableGenerations", "usedGenerations") 
       VALUES ($1, $2, $3, $4, $5, $6, $7, $8) 
       RETURNING *`,
      [
        userId,
        userData.clerkId,
        userData.email,
        userData.firstName,
        userData.lastName,
        userData.photo,
        userData.availableGenerations,
        userData.usedGenerations
      ]
    );

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:');
    console.table(userResult.rows[0]);

    // –°–æ–∑–¥–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é signup bonus
    const transactionId = generateId();
    const transactionResult = await pool.query(
      `INSERT INTO "Transaction" 
        ("id", "tracking_id", "userId", "amount", "type", "reason", "status", "paid_at") 
       VALUES ($1, $2, $3, $4, $5, $6, $7, NOW()) 
       RETURNING *`,
      [
        transactionId,
        userData.clerkId,
        userId,
        20,
        'credit',
        'signup bonus (manual)',
        'completed'
      ]
    );

    console.log('\n‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è signup bonus —Å–æ–∑–¥–∞–Ω–∞:');
    console.table(transactionResult.rows[0]);

    // –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    await pool.query('COMMIT');
    console.log('\n3Ô∏è‚É£  –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞');

    console.log('\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    console.log('‚úÖ –£–°–ü–ï–®–ù–û! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Vladimir —Å–æ–∑–¥–∞–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    console.log('\nüìä –î–µ—Ç–∞–ª–∏:');
    console.log(`   Email: ${userData.email}`);
    console.log(`   Clerk ID: ${userData.clerkId}`);
    console.log(`   –ë–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤: ${userData.availableGenerations}`);
    console.log(`   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${userData.usedGenerations}`);
    console.log('\nüéØ –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç:');
    console.log('   ‚úì –í–æ–π—Ç–∏ –≤ dashboard');
    console.log('   ‚úì –£–≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ 20 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤');
    console.log('   ‚úì –ü–æ–∫—É–ø–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã');
    console.log('   ‚úì –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');

  } catch (error) {
    await pool.query('ROLLBACK');
    console.error('\n‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
    console.error(error.message);
    console.error('\nStack trace:');
    console.error(error.stack);
    process.exit(1);
  } finally {
    await pool.end();
  }
}

// –ó–∞–ø—É—Å—Ç–∏—Ç—å
createVladimirUser()
  .then(() => {
    console.log('\nüëã –ì–æ—Ç–æ–≤–æ!');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  });

